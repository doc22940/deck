!function(e){var t={};function s(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},s.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=0)}([function(e,t,s){"use strict";s.r(t);class n{constructor(){this._LF_obsrvs=new Map}prop(e,t,s){let n;this._isFunc(t)?(n={get:t},this._isFunc(s)&&(n.set=s)):n=t,Object.defineProperty(this,e,n)}listen(e,t){if(t)this._listen(e,t);else for(let t in e){const s=e[t];this._listen(t,s)}}unlisten(e,t){const s=this._LF_obsrvs.get(e);if(void 0===s)return;const n=s.indexOf(t);-1!==n&&s.splice(n,1)}say(e,t){this._say(e,e,t),this._say("*",e,t)}_listen(e,t){const s=this._LF_obsrvs.get(e);s?s.push(t):this._LF_obsrvs.set(e,[t])}_say(e,t,s){const n=this._LF_obsrvs.get(e);void 0!==n&&n.forEach(e=>{if(this._isFunc(e))e.call(this,s);else{var n=e[t];this._isFunc(n)&&n.call(e,s)}})}_callR(e,t,s,n){let i=n?this[n]:this;i&&(i=i[s]),i&&i.apply(this,e);const a=this[t];if(a)for(let i in a){const o=a[i];o._callR&&o._callR(e,t,s,n)}}_clone(e){return function(e){if(null==e||"object"!=typeof e)return e;var t=e.constructor();for(let s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);return t}(e)}_default(e,t,s){let n=e||{};return t in n||(n[t]=s),n}_isStr(e){return"string"==typeof e}_isFunc(e){return"function"==typeof e}}class i{constructor(e,t){if(this.req=e,"string"==typeof t)this.res=null,this.isTimeout="timeout"===t,this.isAborted="abort"===t,this.isNetworkError="error"===t;else{this.res=t;var s=this.res.status;this.isBadRequest=400===s,this.isForbidden=403===s,this.isUnauthorized=401===s,this.isNotFound=404===s,this.isConflict=409===s,this.isServerError=s>=500}}}class a{constructor(e){const t=e||{};this.headers=t.headers||{},this.afterError=t.afterError||function(){},this.authorize=t.authorize||function(){},this.unauthorized=t.unauthorized||null}async exec(e,t,s,n,a){const o=this.headers||{},r={method:e,path:t,headers:o};try{await this.authorize(o,s,n);const l=await this._httpReq(e,t,a,s,n),c=l.status;if(c<400)return l;const d=new i(r,l);if(401===c&&null!=this.unauthorized)return void this.unauthorized(d);throw d}catch(e){return new i(r,e)}}get(e,t,s){return this.exec("GET",e,t,null,s)}post(e,t,s,n,i){const a=i||{};return"Content-Type"in a||(a["Content-Type"]=s||"application/json;charset=UTF-8"),this.exec("POST",e,t,n,a)}put(e,t,s,n,i){const a=i||{};return"Content-Type"in a||(a["Content-Type"]=s||"application/json;charset=UTF-8"),this.exec("PUT",e,t,n,a)}del(e,t,s){return this.exec("DELETE",e,t,null,s)}_httpReq(e,t,s,n,i){var a,o=this,r=s||{};if(i){const e=r["Content-Type"];if(e.match(/\/form-data/)){a=new FormData;for(let e in i)a.append(e,i[e])}else a=e.match(/\/json/)?JSON.stringify(i):o.formatParams(i)}else a=void 0;var l=t;return n&&(l+="?"+o.formatParams(n)),new Promise(function(t,s){var n=new XMLHttpRequest;for(var i in n.open(e,l,!0),r)n.setRequestHeader(i,r[i]);n.onload=function(e){let s,n=this.getResponseHeader("Content-Type");s=null===n?null:n.match(/\/json/)?JSON.parse(this.response):n.match(/\/form/)?o._fromFormData(this.response):this.response,t({status:this.status,headers:this.getAllResponseHeaders(),body:s})},n.onabort=function(e){s("abort")},n.onerror=function(e){s("error")},n.ontimeout=function(e){s("timeout")},n.send(a)})}_formatParams(e){return Object.keys(e).map(t=>encodeURIComponent(t)+"="+encodeURIComponent(e[t])).join("&")}_fromFormData(e){const t={};return e.split("&").forEach(e=>{const s=e.split("=");t[decodeURIComponent(s[0])]=decodeURIComponent(s[1])}),t}}class o extends Object{constructor(e,t={}){super(),this._LF_observer=new n,this._LF_parent=t.parent||null;for(let t in e)this[t]=e[t]}update(e,t){const s=(e,t)=>{const s=this[e];s!==t&&(this[e]=t,this._sayUpdate({field:e,newValue:t,oldValue:s}))};if("object"==typeof e)for(let t in e)s(t,e[t]);else s(e,t)}destroy(){this._LF_observer.say("destroy",{}),this._LF_parent&&this._LF_parent.remove(this)}_sayUpdate(e){this._LF_observer.say("update",e),this._LF_parent&&this._LF_parent.update(this)}_addListener(e){this._LF_observer.listen("*",e)}_removeListener(e){this._LF_observer.unlisten("*",e)}}class r extends o{constructor(e,t={}){super(),this._LF_wrapItem=t.wrapItem||!1,this._data=e?e.map(e=>this._LF_wrapItem?this._wrapItem(e):e):[]}get(e){return this._data[e]}add(e,t){this._LF_wrapItem&&(e=this._wrapItem(e)),void 0===t?this._data.push(e):this._data.splice(t,0,e),this._LF_observer.say("add",{item:e,index:t})}update(e,t){void 0===t&&(t=this._data.indexOf(e)),this._data[t]=e,this._LF_observer.say("update",{item:e,index:t})}remove(e){"number"!=typeof e&&(e=this._data.indexOf(e));const t=this._data.splice(e,1)[0];t instanceof o&&(t._LF_parent=null),this._LF_observer.say("remove",{item:t,index:e})}addAll(e,t){e.forEach(e=>this.add(e,t))}removeAll(e){if((e=e||{}).reverse||!1)for(let e=this.length-1;e>=0;e--)this.remove(e);else for(;this._data.length;)this.remove(0)}removeLast(){this.remove(this.length-1)}reset(e=[]){this.removeAll(),this.addAll(e)}find(e,t){const s=this._data.indexOf(e,t);return s>=0?this._data[s]:void 0}indexOf(e,t){if(void 0===t)return this._data.indexOf(e);const s="function"==typeof e?e:function(s){return s[e]===t};for(let e=0,t=this._data.length;e<t;e++){if(s(this._data[e]))return e}return-1}forEach(e){this._data.forEach(e)}some(e){return this._data.some(e)}get length(){return this._data.length}[Symbol.iterator](){return this._data[Symbol.iterator]()}_addListener(e){this._LF_observer.listen("*",e)}_removeListener(e){this._LF_observer.unlisten("*",e)}_wrapItem(e){return e instanceof o?e:new o(e,{parent:this})}}class l{constructor(){this._q=Promise.resolve()}push(e){this._q=this._q.then(e)}}class c{constructor(e,t){this._view=e,this._model=t,t._addListener(this),this._jobQ=new l}destroy(){this._model._removeListener(this)}add({item:e,index:t}){void 0===t?this._jobQ.push(()=>this._view.addItem(e)):this._jobQ.push(()=>this._view.insertItem(e,t))}update({item:e,index:t}){this._jobQ.push(()=>this._view.updateItem(e,t))}remove({item:e,index:t}){this._jobQ.push(()=>this._view.removeItem(e))}}class d extends n{constructor(e,t,s,n){super(),this.id=null,this.el=null,this.views={},this._LF_bindEvts=[],this._LF_binders=[],this._LF_embedded=!1,this._LF_loads=[],this.embeddable=!1,this._LF_load=s||function(){},n||this._setup.apply(this,this._beforeSetup(e,t))}init(){}load(e,t){this._LF_load(e,t)}unload(){}loaded(){return null===this._LF_loads?Promise.resolve():new Promise(e=>{this._LF_loads.push(e)})}_beforeSetup(e,t,s){return[e,t,s]}async _setup(e,t,s){this._setupRootNode(e,s);const n=this._setupProps(t);this.init(),this._data=n,this._embedDataInHTML(n),this._loadAndSetupEvts(),await this._allSubViewsLoaded(),this._setDataToChildren(this._data),this._LF_loads.forEach(e=>e(this)),this._LF_loads=null}async _allSubViewsLoaded(){const e=Object.values(this.views);e.length&&await Promise.all(e.map(e=>e.loaded()))}_setupRootNode(e,t){if(e){if(this._isStr(e)){if(this.el=t?t.findEl(e):document.body.querySelector(e),!this.el)throw new Error("Failed to create View because element not found ID:"+this.id);this.id=this.el.id}else if(e)this.el=e,this.id=e.id;else if(!this.el)throw new Error("Failed to create View because element not specified");d.Global_afterConstructor(this)}}_setupProps(e){let t=void 0;if(e){(t=e.data)&&delete e.data;for(let t in e)this[t]=e[t]}return t}_loadAndSetupEvts(){const e={},t=this.views;this.load.call(this,t,e),this._initEvts(this,this._evts||d._parseEvents(e))}_bindData(e){if(e instanceof o){const t=new c(this,e);this._LF_binders.push(t)}}contextData(){const e=this._clone(this._data);for(let t in this.views){const s=this.views[t];s&&(e[t]=s.data)}return e}get data(){return this._data}set data(e){this._data=e,this._render(e)}findEl(e){return this.el.querySelector(e)}add(e,t){this.views[e]=t,this.el.appendChild(t.el),t._loadAndSetupEvts()}fire(e,t){const s=t?new CustomEvent(e,{detail:t,bubbles:!0}):new Event(e,{bubbles:!0});this.el.dispatchEvent(s)}_render(e){const t=e||this._data;this._setDataToChildren(t)}_setDataToChildren(e){if(void 0!==e){for(let t in e){const s=e[t];if(t in this.views){this.views[t]._render(s);continue}const n=this.findEl("#"+t);if(n)if(s instanceof Object)for(let e in s){const t=s[e];"html"===e?n.innerHTML=t:"value"===e?n.value=t:n.textContent=t}else n.textContent=s}this._bindData(e)}}_embedDataInHTML(e){return!(!e||!this.embeddable||this._LF_embedded)&&(this._walkToEmbed(this.el,e),this._LF_embedded=!0,!0)}_embedText(e,t){return this._isStr(e)?e.replace(/\{\{(.*?)\}\}/g,(e,s)=>this._getEmbeddedData(s,t)):e}_embedURL(e,t){let s=null,n=0,i=decodeURIComponent(e);return i=i.replace(/\{\{(.*?)\}\}/g,(e,a,o)=>{var r=this._getEmbeddedData(a,t);return r.length>9&&r.lastIndexOf("//",9)>-1?s=o:r||(s=i.length),n++,r}),0===n?null:null!=s?i.substr(s):i}_getEmbeddedData(e,t){if(!e)return null!=t?t:"";let s=t;return e.split(".").forEach(e=>{void 0!==s&&(s=s[e])}),null!=s?s:""}_walkToEmbed(e,t){if(e.nodeType===Node.TEXT_NODE)return void(e.nodeValue=this._embedText(e.nodeValue,t));if(e.nodeType===Node.PROCESSING_INSTRUCTION_NODE||e.nodeType===Node.COMMENT_NODE)return;["id","name","value","className","alt"].forEach(s=>{e[s]&&(e[s]=this._embedText(e[s],t))}),["href","src"].forEach(s=>{if(e[s]){const n=this._embedText(e.getAttribute(s),t);null!=n&&e.setAttribute(s,n)}});for(let s in e.dataset){const n=e.dataset[s];e.dataset[s]=this._embedText(n,t)}const s=e.childNodes;if(s)for(let e=0,n=s.length;e<n;e++)this._walkToEmbed(s[e],t);return e}_el(e){return document.getElementById(e)}_destroy(){for(let e in this.views){this.views[e]._destroy()}this.views={},this.unload(),this._LF_binders.forEach(e=>e.destroy()),this._LF_binders=[],this._LF_bindEvts.forEach(e=>{const t=e[1];"click"===t||"submit"===t?e[0]["on"+t]=null:e[0].removeEventListener(t,e[2])}),this._LF_bindEvts=[]}_initEvts(e,t){let s=t.ROOT;s&&(this._bindEvts(this,e.el,s),delete t.ROOT);for(let n in t){s=t[n];const i=this._findEvtTarget(n,e.el);i&&(i instanceof NodeList?Array.from(i):[i]).forEach(t=>this._bindEvts(e,t,s))}}_findEvtTarget(e,t){return this.findEl("#"+e)}_bindEvts(e,t,s){for(let n in s)this._bindEvt(e,t,n,s[n])}_bindEvt(e,t,s,n){const i=function(t){return n.call(e,this,t),!1};-1!==["click","submit","change"].indexOf(s)?t["on"+s]=i:t.addEventListener(s,i),this._LF_bindEvts.push([t,s,i])}_firstEl(e){const t=e.firstElementChild;if(void 0!==t)return t;const s=e.childNodes;for(let e=0,t=s.length;e<t;e++){const t=s[e];if(t.nodeType===Node.ELEMENT_NODE)return t}return null}static _getLFID(){return h()}static _parseEvents(e){const t={ROOT:{}};for(let s in e){const n=s.lastIndexOf("_");if(-1===n){t.ROOT[s]=e[s];continue}const i=s.substr(0,n);let a;(a=i in t?t[i]:t[i]={})[s.substr(n+1)]=e[s]}return t}static Global_afterConstructor(e){}}const h=(u=0,function(){return"_LF_"+u++});var u;class m{constructor(e){e=e||{}}async fetch(e,t){const s=t||!1,n=await this._loadHtml(e);return this._createTmpl(n,s)}async _loadHtml(e){return(await(new a).get(e)).body}_createTmpl(e,t){const s=document.createElement("template");return s.innerHTML=e,t?s:s.content}}class p extends d{constructor(e,t,s){if(super(null,null,s,!0),this.parent=null,this.states={},t=t||{},this._LF_loads=[],e instanceof Node)this._setup(e,t);else{if(!e)throw new Error("AreaView requires nodeOrUrl");this._constructorForHTML(e,t)}}context(e){return e}async _setup(e,t,s){this._setupRootNode(e,s);var n=this._setupProps(t);this.init();const i=this.context(n,this.itemId);this._data=i,this._embedDataInHTML(i),this._loadAndSetupEvts(),await this._allSubViewsLoaded(),this._setDataToChildren(this._data),this._LF_loads.forEach(e=>e(this)),this._LF_loads=null}get childFrame(){return this._childFrame}set childFrame(e){this._isStr(e)?this._childFrame=this.findEl(e):this._childFrame=e}setState(e){this.states[e].call(this,this.data)}_constructorForHTML(e,t){return p.fetchArea(e).then(e=>{const s=document.importNode(e.content,!0);return this._setup(this._firstEl(s),t)})}_loadAndSetupEvts(){this._LF_shown&&this._LF_shown(),super._loadAndSetupEvts()}broadcast(e,t){this._callR([e,t],"views","cast")}static fetchArea(e){const t=(()=>(this.__cache=this.__cache||{},this.__cache))();return!this.__noCache&&e in t?Promise.resolve(t[e]):(new m).fetch(e,!0).then(s=>(t[e]=s,s))}static disableCache(){this.__noCache=!0}}const v="#!";class f{constructor(e,t){t=t||{},this._routeTree=this._parseRoute(e),this._lastRoute=null,this.onMove=t.onMove||function(){},this.mode=t.mode||"HASH"}depart(){let e,t,s=this;if("HISTORY"===s.mode){let n=new URL(document.baseURI).pathname;this.basePath=n.substr(0,n.length-1),window.document.addEventListener("click",function(e){s._captureClick(e)},!0),t=function(e){try{s.move(e)}catch(e){"string"==typeof e&&(window.location.href=s.rootPath+e)}},window.onpopstate=function(e){t(e.state.path)},e=window.location.pathname.substr(document.baseURI.length)}else"HASH"===s.mode&&(t=function(e){try{s.move(e)}catch(e){"string"==typeof e&&(window.location.hash=v+e)}},window.onhashchange=function(e){const s=window.location.hash;t(s.substr(v.length)||"/")},e=window.location.hash.substr(v.length));t(e)}canGo(e){return null!==this.getRoute(e)}go(e){if("HISTORY"===this.mode){const t=window.history;t&&t.pushState&&(t.pushState({path:e},null,e),this.move(e))}else"HASH"===this.mode&&(window.location.hash=v+e)}move(e){const t=this.getRoute(e);this.onMove(t)}getRoute(e){e.startsWith("/")||(e="/"+e);let t=e;"/"===t&&(t+="index"),t.endsWith("/")&&(t=t.substr(0,t.length-1));const s=this._parsePath(t);let n,i=this._routeTree,a={},o=null;for(;void 0!==(n=s.shift());){let r;if(n in i)r=i[n];else{if(!("_any_"in i))throw alert(`${t} page isn't defined`),"/";if(a[i._any_.id]=n,i=i._any_.children,s.length>0)continue;r=i.index}if("string"==typeof r)throw this._resolve(e,r);r.prototype instanceof p?o={view:r,ctx:a}:(i=r,0===s.length&&s.unshift("index"))}if(o)return o;throw alert(`${t} page not found`),"/"}_captureClick(e){const t=document.activeElement;if(!t||"A"!==t.tagName)return;window.location;if(t.href.startsWith(document.baseURI)){e.preventDefault();try{this.go(t.pathname.substr(this.basePath.length))}catch(e){"string"==typeof e&&this.go(e)}}}_parsePath(e){const t=e.split("/");return t.shift(),t}_parseRoute(e){const t={};for(let s in e){const n=e[s],i=n.prototype instanceof d||"string"==typeof n;if(s.startsWith(":")){const e=t._any_={id:s.substr(1)};e.children=i?{index:n}:this._parseRoute(n)}else t[s]=i?n:this._parseRoute(n)}return t}_resolve(e,t){if(t.startsWith("/"))return t;const s=e.split("/");let n;for(;n=t.match(/^\.\.\/?(.*)$/);)s.pop(),t=n[1];return s.join("/")+t}}class _{constructor(e){this._rootArea=e,this._contentArea=null}get contentArea(){return this._contentArea}replaceLayer(e){this._removeLayer(),this._addLayer(e).then(()=>this._updateTitle())}broadcast(e,t){this._layers.forEach(function(s){s.area.broadcast(e,t)})}_removeLayer(){const e=this._contentArea;e&&(e.unloading=!0,e._destroy&&e._destroy(),e.parent=null,this._contentArea=null)}async _addLayer(e){const t=new e.view;t.parent=this._rootArea;for(let s in e.ctx)t[s]=e.ctx[s];t._LF_shown=function(){const e=this.parent.childFrame;if(!e)throw"Area's childFrame isn't defined";for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(this.el)};await t.loaded();this._contentArea=t}_updateTitle(){let e="";if(this._contentArea){const t=this._contentArea;e=t.title?t.title():""}document.title=this._rootArea.title(e)}}var w=new class{constructor(){}activate(e,t,s){const n={onMove:e=>{this._onMove(e)},mode:(s=s||{}).mode,rootPath:s.rootPath};this._router=new f(t,n),this._screen=new _(new e),window.onload=(e=>{this._onLoad(e)})}go(e,t){return this._preCtx=t,this._router.go(e),!1}back(){return window.history.back(),!1}_onLoad(){this._hashChanged=!1,this._router.depart()}_onMove(e){this._preCtx&&(e.ctx=Object.assign(e.ctx||{},this._preCtx),this._preCtx=null),this._screen.replaceLayer(e)}};class g extends d{constructor(e,t){super(null,Object.assign("object"==typeof e?e:{},{embeddable:!0}),t)}_beforeSetup(e,t,s){const n=document.importNode(this._LF_df,!0);return t=Object.assign(t||{},this._LF_props),[this._firstEl(n),t,s]}_findEvtTarget(e,t){let s=t.querySelector("."+e);return s||"FORM"!==t.tagName||(s=t[e]||null),s}static setTemplate(e,t){this.prototype._LF_df=g._loadTmpl(e,t)}static extend(e,t){const s=t||{};class n extends g{}return n.prototype._LF_props=s,n.setTemplate(e,s.parent),n}static _loadTmpl(e,t){if(e instanceof Node)return e.content;if(t)return t.findEl(e).content;{const t=e.trim();if(t.startsWith("<")){const e=document.createElement("template");return e.innerHTML=t,e.content}return document.querySelector(t).content}}static async fetchTmpl(e){const t=(()=>(this._LF_cache=this._LF_cache||{},this._LF_cache))();if(!this._LF_noCache&&e in t)return t[e];const s=await(new m).fetch(e,!1);return t[e]=s,s}static disableCache(){this._LF_noCache=!0}}class y extends d{constructor(e,t,s,n){super(e,Object.assign(s||{},{_LF_tmpl:t}),"function"==typeof s?s:n||null),this._LF_itemSet={}}load(e,t,s){this._LF_load(e,t,s)}getItemAt(e){const t=this._childElementAt(e).getAttribute("_lfid_");return this._LF_itemSet[t]}async addItem(e){const t=this._createViewByItem(e);return await t.loaded(),this.addItemEl(this.el,t.el),t}async insertItem(e,t){const s=this._createViewByItem(e);return await s.loaded(),this.insertItemEl(this.el,s.el,this._childElementAt(t)),s}updateItem(e,t){const s=this._childElementAt(t).getAttribute("_lfid_");this._LF_itemSet[s]=e,this.views[s].data=e}removeItem(e){const t=this.views;for(let s in t)if(t[s]._data===e)return void this.removeItemByEl(t[s].el)}removeItemAt(e){const t=e>=0?this._childElementAt(e):this.el.lastElementChild;this.removeItemByEl(t)}removeItemByEl(e){const t=e.getAttribute("_lfid_");delete this._LF_itemSet[t];const s=this.views;s[t].unload(),delete s[t],this.removeItemEl(this.el,e)}removeItemByView(e){this.removeItemByEl(e.el)}onItemLoad(e,t){}addItemEl(e,t){e.appendChild(t)}insertItemEl(e,t,s){e.insertBefore(t,s)}removeItemEl(e,t){e.removeChild(t)}itemClass(e){return this._LF_tmpl}_loadAndSetupEvts(){const e={},t={};this.load.call(this,this.views,e,t),this._initEvts(this,d._parseEvents(e)),this._setupItemTmplView(d._parseEvents(t))}_bindData(e){if(e instanceof r){const t=new c(this,e);this._LF_binders.push(t)}}_childElementAt(e){const t=this.el.children;let s=0;for(let n=0,i=t.length;n<i;n++){const i=t[n];if("TEMPLATE"!==i.tagName){if(e===s)return i;s++}}return null}_createViewByItem(e){const t=d._getLFID(),s=this.itemClass(e),n=e instanceof d?e:new s({data:e});return this._LF_itemSet[t]=n,this.views[t]=n,n.el.setAttribute("_lfid_",t),n}async _setDataToChildren(e){if(void 0!==e){this._LF_itemSet={};for(let t of e)await this.addItem(t);this._bindData(e),this._data=e}}_setupItemTmplView(e){const t=this._LF_tmpl;if(this._isStr(t)){const s=this.el.querySelector(t);this._LF_tmpl=g.extend(s,{_evts:e}),s.parentNode.removeChild(s)}else t&&t.prototype instanceof g?this._LF_tmpl=t:this._LF_tmpl=null}}class b extends d{constructor(e,t,s){super(e,Object.assign(t||{},{embeddable:!0}),s||null)}get data(){return this._dataFromFields()}set data(e){this._data=e,this._render(e)}get fields(){if(!this._fields){const e=[],t=this.el;for(let s=0;s<t.length;s++){const n=t[s].name;n&&e.push(n)}this._fields=e}return this._fields}set fields(e){let t=e;this._isStr(t)&&(t=t.split(/\s+/)),this._fields=t||[]}_setDataToChildren(e){this._dataToFields(e)}_dataFromFields(){const e={};return this.fields.forEach(t=>{const s=this.el[t]||this.el.dataset[t]||this._el(t);if(s)return void(e[t]=s.value);const n=this.views[t];n&&(e[t]=n.value)}),e}_dataToFields(e){e&&this.fields.forEach(t=>{const s=e[t]||null;let n=this.el[t]||this.el.dataset[t]||null;if(n&&"value"in n)return void(n.value=s);"textContent"in(n=this.findEl(t))&&(n.textContent=s||"");const i=this.views[t];i&&("value"in i?i.value=s:"value"in i.el&&(i.el.value=s))})}_findEvtTarget(e,t){return t[e]||this.findEl("#"+e)}}var E=class{constructor(e,t){const s={token:e};t&&(s.rootURL=t+"/api/v3"),this.octo=new Octokat(s),this.loginUser=null,this.token=e,this.endpoint=t||null}activate(e){return this.octo.me.fetch().then(e=>(this.loginUser=e,this.octo.user.orgs.fetch())).then(e=>({user:self.loginUser,orgs:e}))}fetchTarget(e,t,s){let n;return(n=t?this.octo.repos(e,t):this.octo.orgs(e)).fetch().then(e=>({user:this.loginUser,target:e}))}};var T={load:function(){let e={};try{const t=localStorage.getItem("defaults");t&&(e=JSON.parse(t))}catch(e){}return e},save:function(e,t){const s=this.load();void 0!==t?s[e]=t:e in s&&delete s[e],localStorage.setItem("defaults",JSON.stringify(s))}};let U;class L extends b{load(e,t){t.submit=((e,t)=>{const s={service:"github",width:"normal",notify:"off",kind:"my_pullreq_states",caption:"PullRequest states",token:U.token,endpoint:U.endpoint};return this.fire("timelineAdded",s),!1})}}class k extends b{load(e,t){const s=e.selectList=new y("#githubTimelineSelect","#githubTimelineItem");t.submit=((e,t)=>{const n=this.findEl('input[name="gheUrl"]');n.value=n.value.replace(/\/$/,"");const i=this.data,a={token:i.githubToken,gheUrl:i.gheUrl};return(U=new E(a.token,a.gheUrl)).activate().then(e=>{const t=[{caption:"My Timeline",value:"my_timeline"}];e.orgs.items.forEach(e=>{t.push({caption:e.login,value:e.login})}),s.data=t,this.fire("fieldStateChanged",{enabled:!0})}).catch(e=>{s.data=[],this.fire("fieldStateChanged",{enabled:!1}),alert("Failed to authenticate GitHub account by token")}),!1})}}class A extends b{load(e,t){t.submit=((e,t)=>{var s=this.data.value.split("/"),n=s[0],i=s.length>1?s[1]:null;return U.fetchTarget(n,i).then(e=>{this.register(this.data)}).catch(e=>{alert("Failed to access repository")}),!1})}register(e){e.token=U.token,e.endpoint=U.endpoint,e.service="github",e.width="normal",e.caption=e.value;const t=e.value.split("/");1===t.length?(e.org=t[0],e.kind="org"):(e.owner=t[0],e.repo=t[1],e.kind="repo"),this.fire("timelineAdded",e)}}class I extends b{load(e,t){t.submit=((e,t)=>{const s=this.data;return s.token=U.token,s.endpoint=U.endpoint,s.service="github",s.width="normal",s.notify="off","my_timeline"!==s.value?(s.kind="private",s.caption=s.value):(s.kind="my_timeline",s.caption="My Timeline"),this.fire("timelineAdded",s),!1})}}class F extends b{load(e,t){t.submit=((e,t)=>{const s={service:"github",width:"normal",notify:"off",kind:"public_timeline",caption:"Public Timeline",token:U.token,endpoint:U.endpoint};return this.fire("timelineAdded",s),!1})}}var x=class extends p{constructor(){super("views/settings/github.html")}load(e,t){const s=e.notificationsForm=new L("#notificationsForm",{fields:"githubToken gheUrl"}),n=e.accountForm=new k("#accountForm",{fields:"githubToken gheUrl"}),i=e.repositoryForm=new A("#repositoryForm",{fields:"value"}),a=e.timelineForm=new I("#yourTimelineForm",{fields:"value"}),o=e.PublicTimelineForm=new F("#publicTimelineForm",{fields:"value"});t.cancelButton_click=function(){w.go("settings/timeline")},t.timelineAdded=((e,t)=>{const s=t.detail;T.save("github",{token:s.token,gheUrl:s.endpoint}),w.go("settings/timeline",{newTimeline:s})}),t.fieldStateChanged=((e,t)=>{const n=!t.detail.enabled;s.el.querySelectorAll("fieldset").forEach(e=>{e.disabled=n}),i.el.querySelectorAll("fieldset").forEach(e=>{e.disabled=n}),a.el.querySelectorAll("fieldset").forEach(e=>{e.disabled=n}),o.el.querySelectorAll("fieldset").forEach(e=>{e.disabled=n})});const r=T.load().github||{};n.data={githubToken:r.token||null,gheUrl:r.gheUrl||null}}};var R=class{constructor(e,t){this.token=e,this.url=t}loadProjects(e){var t=jQuery.Deferred();return jQuery.ajax({url:this.url+"/api/v2/projects",data:{apiKey:this.token},dataType:"json"}).done(function(e){t.resolve(e.filter(function(e){return!e.archived}))}).fail(function(e){t.reject(e)}),t}fetch(e,t){let s={apiKey:this.token};e.latestId&&(s.minId=e.latestId+1),e.count&&(s.count=e.count);var n=jQuery.Deferred();return jQuery.ajax({url:this.url+e.path,data:s,dataType:"json"}).done(function(e){n.resolve(e.filter(function(e){return!e.archived}))}).fail(function(e){n.reject(e)}),n}};let j;class S extends b{constructor(e){super("#accountForm",e)}load(e,t){t.submit=(()=>{const e=this.findEl('input[name="backlogUrl"]');e.value=e.value.replace(/\/$/,"");const t=this.data;return(j=new R(t.backlogToken,t.backlogUrl)).loadProjects().then(e=>{const t=[{caption:"My Timeline",value:"space"}];e.forEach(e=>{t.push({caption:e.name,value:e.projectKey})}),this.fire("fieldStateChanged",{enabled:!0,projectList:t})},e=>{this.fire("fieldStateChanged",{enabled:!1,projectList:[]}),alert("Failed to authenticate Backlog account by token")}),!1})}}class q extends b{load(e,t){e.selectList=new y("#projectSelect","#projectItem"),t.submit=(()=>{const e=this.data,t={service:"backlog",width:"normal",notify:"off",token:j.token||null,endpoint:j.url||null};return"my_timeline"!==e.value?(this.projectList.some(s=>(t.caption=s.caption,s.value===e.value)),t.kind="project",t.project=e.value):(t.kind="my_timeline",t.caption="My Timeline"),this.fire("timelineAdded",t),!1})}setProjectList(e){this.projectList=e,this.views.selectList.data=e}}var C=class extends p{constructor(){super("views/settings/backlog.html")}load(e,t){const s=e.accountForm=new S({fields:"backlogToken backlogUrl"}),n=e.projectForm=new q("#projectForm",{fields:"value"});t.cancelButton_click=function(){w.go("settings/timeline")},t.timelineAdded=((e,t)=>{const s=t.detail;T.save("backlog",{token:s.token,url:s.endpoint}),w.go("settings/timeline",{newTimeline:s})}),t.fieldStateChanged=((e,t)=>{const s=!t.detail.enabled;n.el.querySelectorAll("fieldset").forEach(e=>{e.disabled=s}),n.setProjectList(t.detail.projectList)});const i=T.load().backlog||{};s.data={backlogToken:i.token||null,backlogUrl:i.url||null}}};class V extends g{load(e,t){t.remove_click=(()=>{$(this.el).fadeOut(300,()=>{$(this.el).remove()}),this.fire("delete",{item:this.data})}),t.moveLeft_click=(()=>{this.fire("move",{pos:-1,item:this.data})}),t.moveRight_click=(()=>{this.fire("move",{pos:1,item:this.data})}),t.widthSelect_change=((e,t)=>{this.data.width=e.value}),t.notifySelect_change=((e,t)=>{this.data.notify=e.value}),this.findEl(".widthSelect").value=this.data.width,this.findEl(".notifySelect").value=this.data.notify||"off",this.findEl(".project").innerHTML=this.data.caption.split("/").join("/<wbr>")}}class P extends y{load(e,t){t.move=((e,t)=>{const{item:s,pos:n}=t.detail,i=this.data.indexOf(s),a=i+n;-1!==a&&a!==this.data.length&&(this.data.remove(i),this.data.add(s,a))}),t.delete=((e,t)=>{this.data.remove(t.detail.item)})}}const N=new r;var O=new class extends n{constructor(){super(),this.listen("notify",e=>{if(!this.hasNewArrival&&e.notify){this.hasNewArrival=!0,document.querySelector("#favicon").href="img/favicon-new.ico";const e=t=>{this.say("clear"),document.body.removeEventListener("click",e,!1)};document.body.addEventListener("click",e)}if("notify"in e&&"off"!==e.notify&&"Notification"in window&&"granted"===Notification.permission){let t;if(e.mentions)t=`Your are mentioned ${e.message}`;else{if("mentioned"===e.notify)return;t=e.message}const s=new Notification(e.title,{body:t,icon:"img/apple-touch-icon-180x180.png"});s.onclick=function(){window.focus()},setTimeout(()=>s.close(),6e3)}}),this.listen("clear",e=>{document.querySelector("#favicon").href="img/favicon-default.ico",this.hasNewArrival=!1})}};var M=class extends n{constructor(e,t){super(),this.client=new R(e,t),this.rootUrl=t,this.latestId=0}activate(e){this.tlinfo=e,this.interval=6e4;let t=e.project;return this.fetchPath="/api/v2/"+("space"==t?"space":"projects/"+t)+"/activities",this.webUrl=this.rootUrl+("space"==t?"/dashboard":"/projects/"+t),this.client.fetch({path:this.fetchPath,count:40}).then(t=>{this.latestId=t.length>0?parseInt(t[0].id,10):0;const s={name:e.caption,url:this.webUrl,eventList:t,notify:e.notify||"off"};return setTimeout(()=>{this.loadNew()},this.interval),{model:this,data:s,name:s.name,notify:s.notify||"off"}})}loadNew(){if(0===this.interval)return!1;this.client.fetch({path:this.fetchPath,minId:this.latestId+1}).then(e=>{let t,s=0;for(let n=0,i=e.length;n<i&&!((t=parseInt(e[n].id,10))<=this.latestId);n++)s++;if(this.interval>0&&setTimeout(()=>this.loadNew(),this.interval),0===s)return;this.latestId=e.length>0?parseInt(e[0].id,10):0;const n=e.slice(0,s),i={notify:this.tlinfo.notify||"off",title:"Backlog "+this.tlinfo.caption,message:s+" new event(s)"};this.say("newArrived",{newItems:n,notify:i})})}stopAutoLoad(){this.interval=0}},H=function(e){let t=(new Date).getTime(),s=new Date(e),n=s.getHours(),i=s.getMinutes();return n<10&&(n=" "+n),i<10&&(i="0"+i),t-s.getTime()<432e5?n+":"+i:s.getMonth()+1+"."+s.getDate()+" "+n+":"+i};function B(e){this.rootUrl=e,this.views=function(){const e=g.extend('\n      <p class="issueChange">\n        <span class="changeField">{{field}}</span>\n        <span class="changeOld">{{oldValue}}</span>\n        <span class="changeMark">{{mark}}</span>\n        <span class="changeNew">{{newValue}}</span>\n      </p>'),t=g.extend('\n      <p class="issueAttachment">\n        <span class="changeNew">{{name}}</span><br>\n        <img src="{{imageUrl}}" alt="{{name}}">\n      </p>');class s extends g{load(s,n){s.changes=new y(this.findEl(".issueChanges"),e),s.attachments=new y(this.findEl(".issueAttachments"),t);const i=this.findEl(".commentBody"),a=this.data.diff;i.innerHTML=marked(a?a.newValue:this.data.desc||"")}}s.setTemplate('\n      <div class="backlogEvent">\n        <header>\n          <a class="eventRepo" href="{{projectUrl}}">{{project.name}}</a>\n          <span class="eventTime"><time>{{createdAt}}</time></span>\n        </header>\n\n        <div class="eventInfo">\n          <span class="actor">{{actor.name}}</span> &nbsp;\n          <span class="action updateIssue">{{action}}</span>\n        </div>\n        <div class="issue">\n          <a href="{{url}}">{{projectKeyId}}</a>\n          <span>{{summary}}</span>\n        </div>\n\n        <div class="issueChanges"></div>\n\n        <div class="commentBody quote"></div>\n\n        <div class="issueAttachments"></div>\n      </div>');class n extends g{load(e,t){this.findEl(".commentBody").innerHTML=marked(this.data.diff||"")}}n.setTemplate('\n    <div class="backlogWikiEvent backlogEvent ghEvent">\n      <header>\n        <a class="repo" href="{{projectUrl}}">{{project.name}}</a>\n        <span class="eventTime"><time>{{createdAt}}</time></span>\n      </header>\n\n      <div class="eventInfo">\n        <span class="actor">{{actor.name}}</span> &nbsp;\n        <span class="action wiki">{{action}}</span>\n      </div>\n\n      <div class="issue">\n        <span>{{file}}</span>\n      </div>\n\n      <div class="commentBody quote"></div>\n    </div>');class i extends g{load(e,t){e.commits=new y(this.findEl(".pushCommits"),"pushCommit")}}i.setTemplate('\n    <p class="pushCommit">\n      <a href="{{commitUrl}}"><code>{{sha}}</code></a>\n      <span>{{message}}</span>\n    </p>');class a extends g{load(e,t){e.commits=new y(this.findEl(".pushCommits"),i)}}a.setTemplate('\n    <div class="BacklogGitPushEvent backlogEvent ghEvent">\n      <header>\n        <a class="repo" href="{{projectUrl}}">{{project.name}}</a>\n        <span class="eventTime"><time>{{createdAt}}</time></span>\n      </header>\n\n      <div class="eventInfo">\n        <span class="actor">{{actor.name}}</span> &nbsp;\n        <span class="action gitPushed">{{action}}</span>\n      </div>\n\n      <div class="issue">\n        <a href="{{repoUrl}}">{{repoName}}</a>　の\n        <a class="branch-ref" href="{{branchUrl}}">{{branch}}</a>\n      </div>\n\n      <div class="pushCommits"></div>\n    </div>');const o={EventView:s,WikiView:n,GitPushView:a};return o.FileView=g.extend('\n    <div class="backlogFileEvent backlogEvent ghEvent">\n      <header>\n        <a class="repo" href="{{projectUrl}}">{{project.name}}</a>\n        <span class="eventTime"><time>{{createdAt}}</time></span>\n      </header>\n\n      <div class="eventInfo">\n        <span class="actor">{{actor.name}}</span> &nbsp;\n        <span class="action updateIssue">{{action}}</span>\n      </div>\n\n      <div class="issue">\n        <span>{{file}}</span>\n      </div>\n    </div>'),o.JoinView=g.extend('\n    <div class="backlogJoinEvent backlogEvent ghEvent">\n      <header>\n        <a class="repo" href="{{projectUrl}}">{{project.name}}</a>\n        <span class="eventTime"><time>{{createdAt}}</time></span>\n      </header>\n\n      <div class="eventInfo">\n        <span class="actor">{{actor.name}}</span> &nbsp;\n        <span class="action projectUser">{{action}}</span>\n      </div>\n\n      <div class="joinProject">\n       <p>{{users}} がメンバー{{move}}</p>\n      </div>\n    </div>'),o}()}B.prototype={Wiki:function(e){var t={projectUrl:this.rootUrl+"/projects/"+e.project.projectKey,action:this.typeCaption[e.type],createdAt:H(e.created),actor:e.createdUser,project:e.project,file:e.content.name,diff:e.content.diff||e.content.content};return new this.views.WikiView({data:t})},File:function(e){var t={projectUrl:this.rootUrl+"/projects/"+e.project.projectKey,action:this.typeCaption[e.type],createdAt:H(e.created),actor:e.createdUser,project:e.project,file:e.content.dir+e.content.name};return new this.views.FileView({data:t})},Join:function(e){var t={projectUrl:this.rootUrl+"/projects/"+e.project.projectKey,action:this.typeCaption[e.type],createdAt:H(e.created),actor:e.createdUser,project:e.project,move:15==e.type?"に加わりました。":"から外れました。",users:e.content.users.map(function(e){return e.name}).join(", ")};return new this.views.JoinView({data:t})},GitPush:function(e){var t={projectUrl:this.rootUrl+"/projects/"+e.project.projectKey,action:this.typeCaption[e.type],createdAt:H(e.created),actor:e.createdUser,project:e.project,projectKey:e.project.projectKey,repoName:e.content.repository.name},s=this.rootUrl+"/git/"+t.projectKey+"/"+t.repoName;return t.repoUrl=s,t.branch=e.content.ref.replace(/^refs\/heads\//,""),t.branchUrl=s+"/tree/"+t.branch,t.commits=function(e,t){return t.map(function(t){return{sha:t.rev.substr(0,6),commitUrl:e+"/commit/"+t.rev,message:t.comment}})}(s,e.content.revisions),new this.views.GitPushView({data:t})},Event:function(e){var t={projectUrl:this.rootUrl+"/projects/"+e.project.projectKey,action:this.typeCaption[e.type],createdAt:H(e.created),actor:e.createdUser,project:e.project,projectKeyId:e.project.projectKey+"-"+e.content.key_id,summary:e.content.summary,desc:e.content.description};return this.analyzeChanges(t,e.content.changes),e.content.attachments&&(t.attachments=this.convertAttachments(this.rootUrl,e.content.attachments)),t.url=this.rootUrl+"/view/"+t.projectKeyId,e.content.comment&&(t.desc=e.content.comment.content),new this.views.EventView({data:t})},typeCaption:[null,"課題の追加","課題の更新","課題にコメント","課題の削除","Wikiを追加","Wikiを更新","Wikiを削除","共有ファイルを追加","共有ファイルを更新","共有ファイルを削除","Subversionコミット","GITプッシュ","GITリポジトリ作成","課題をまとめて更新","プロジェクトに参加","プロジェクトから脱退","コメントにお知らせを追加","プルリクエストの追加","プルリクエストの更新","プルリクエストにコメント"],statuses:[null,"未対応","処理中","処理済み","完了"],resolutions:["対応済み","対応しない","無効","重複"],priorities:[null,null,"高","中","低"],convertChange:function(e){var t;return"status"==e.field?t={field:"状態",newValue:this.statuses[parseInt(e.new_value)],mark:"→",oldValue:this.statuses[parseInt(e.old_value)]}:"resolution"==e.field?t={field:"完了理由",newValue:this.resolutions[parseInt(e.new_value)],mark:"→",oldValue:this.resolutions[parseInt(e.old_value)]}:"priority"==e.field?t={field:"優先度",newValue:this.priorities[parseInt(e.new_value)],mark:"→",oldValue:this.priorities[parseInt(e.old_value)]}:"attachment"==e.field?t={field:"添付ファイル",newValue:e.new_value,mark:"",oldValue:e.old_value}:"assigner"==e.field?t={field:"担当",oldValue:e.old_value,mark:"→",newValue:e.new_value}:"description"==e.field?t={field:"diff",oldValue:e.old_value,mark:"→",newValue:e.new_value}:"limitDate"==e.field?t={field:"期限日",oldValue:e.old_value,mark:"→",newValue:e.new_value}:"issueType"==e.field&&(t={field:"種別",oldValue:e.old_value,mark:"→",newValue:e.new_value}),t?t.oldValue||(t.mark=""):t={},t},analyzeChanges:function(e,t){if(t){var s=this;e.changes=[],t.forEach(function(t){var n=s.convertChange(t);"diff"==n.field?e.diff=n:e.changes.push(n)})}},convertAttachments:function(e,t){var s=[];return t.forEach(function(t){try{var n=t.name,i=n.substr(n.lastIndexOf(".")+1).toLowerCase();"png"!=i&&"jpg"!=i&&"gif"!=i||s.push({imageUrl:e+"/ViewAttachmentImage.action?attachmentId="+t.id,id:t.id,name:n,size:t.size})}catch(e){}}),s},createView:function(e){switch(e.type){case 5:case 6:case 7:return this.Wiki(e);case 12:return this.GitPush(e);case 8:case 9:case 10:case 11:case 13:return this.File(e);case 15:case 16:return this.Join(e);default:return this.Event(e)}}};var D=B;class G extends g{load(e,t){const{viewFactory:s}=this.data,n=s.createView(this.data);n&&(this.add("item",n),this.data.newArrival&&this.el.classList.add("newArrival"))}}G.setTemplate('<div class="backlogItem"></div>');class W extends g{constructor(e){const t=new r;e.data.eventList=t,super(e),this.items=t}load(e,t){const s=this.data;s.width&&this.el.classList.add(s.width),this.loadStream(s);e.eventList=new y(this.findEl(".timelineBody"),G);t.timelineHeader_click=(()=>{this.fire("clickedTimelineHeader",this.data)}),t.clickedTimelineHeader=((e,t)=>{$(this.findEl(".timelineBody")).animate({scrollTop:0})})}unload(){this.model.stopAutoLoad()}destroyed(){return!this.el.parentNode}loadStream(e){this.model=new M(e.token,e.endpoint),this.model.activate(e).then(e=>{const t=e.data;this.findEl(".timelineHeader > a").href=t.url,this.viewFactory=new D(e.model.webUrl),t.eventList.forEach(e=>{e.viewFactory=this.viewFactory}),this.items.reset(t.eventList)}).fail(()=>{alert("Can't fetch Backlog information")}),this.model.listen("newArrived",e=>this.loadMore(e))}loadMore(e){this.destroyed()||(e.notify&&O.say("notify",e.notify),e.newItems.reverse().forEach(e=>{e.viewFactory=this.viewFactory,e.newArrival=!0,this.items.add(e,0)}),this.findEl("header").classList.add("newArrival"))}}W.setTemplate('\n  <div class="deckColumn">\n    <div class="timeline backlog">\n      <header class="timelineHeader">\n        <a href="{{url}}" target="_blank">\n          <span class="service">Backlog</span>\n          <span class="project">{{caption}}</span>\n        </a>\n      </header>\n      <div class="timelineBody"></div>\n    </div>\n  </div>');var J=W;var K=class extends n{constructor(e,t){super();const s={token:e};t&&(s.rootURL=t+"/api/v3"),this.octo=new Octokat(s),this.loginUser=null,this.fetcher=null,this.latestId=0,this.isPublic=!e,this.webUrl=t||"https://github.com",this.v4client=graphql("https://api.github.com/graphql",{headers:{Authorization:`Bearer ${e}`},asJSON:!0})}async activate(e){this.tlinfo=e,this.name=e.caption,this.interval=6e4,this.notify=e.notify||"off";const t=await this.getLoginUser();"my_pullreq_states"===e.kind?(e.value=t.login,this.setupMyNotifications()):this.setupEvents(t)}async getLoginUser(){return this.isPublic?null:(this.loginUser=await this.octo.me.fetch(),this.loginUser)}setupMyNotifications(){this.url="https://github.com/notifications",this.type="notification",this.loadNotifications()}setupEvents(e){const t=this.tlinfo;"my_timeline"==t.kind?(this.fetcher=this.octo.users(e.login).receivedEvents,t.value=e.login,this.url=`https://github.com/${e.login}`):"org"==t.kind?(this.fetcher=this.octo.orgs(t.org).events,this.url=`https://github.com/${t.org}`):"repo"==t.kind?(this.fetcher=this.octo.repos(t.owner,t.repo).events,this.url=`https://github.com/${t.owner}/${t.repo}`):"private"==t.kind?(this.fetcher=this.octo.users(e.login).events.orgs(t.value),this.url=`https://github.com/${e.login}/${t.value}`):"public_timeline"==t.kind&&(this.fetcher=this.octo.events,t.value="Public",this.url="https://github.com/"),this.type="event",this.loadFirstEvents()}async loadNotifications(){const e=new Date((new Date).getTime()-2592e6).toISOString(),{items:t}=await this.octo.notifications.fetch({since:e}),s=[];t.forEach(({subject:e})=>{const{type:t,url:n}=e;if("PullRequest"===t){const[e,t,i,a]=n.match(/\/([^\/]+)\/([^\/]+)\/pulls\/(\d+)$/);s.push(this.fetchPullReqDetail(t,i,Number(a)))}});let n=await Promise.all(s);const i=(n=(n=(n=n.reduce((e,t)=>e.concat(t),[])).filter(e=>"MERGED"!==e.state)).sort((e,t)=>e.updatedAt<t.updatedAt?1:e.updatedAt>t.updatedAt?-1:0)).length?new Date(n[0].updatedAt).getTime():0;let a=null;this.latestId&&this.latestId<i&&(a={title:`GitHub ${this.name}`,message:"New states for PullRequests"}),this.latestId=i,this.say("refresh",{items:n,notify:a}),this.interval&&setTimeout(async()=>{await this.loadNotifications()},this.interval)}async loadFirstEvents(){const{items:e}=await this.fetcher.fetch({per_page:60});this.latestId=e.length>0?parseInt(e[0].id,10):0,this.applyMention(e),this.say("refresh",{items:e,notify:null}),this.interval&&setTimeout(async()=>{await this.loadNewEvents()},this.interval)}async loadNewEvents(){if(!this.interval)return;const{items:e}=await this.fetcher.fetch();let t,s=0;for(let n=0,i=e.length;n<i&&!((t=parseInt(e[n].id,10))<=this.latestId);n++)s++;s>0&&(this.latestId=e.length>0?parseInt(e[0].id,10):0,this.notifyNewArrived(e.slice(0,s),s)),setTimeout(()=>this.loadNewEvents(),this.interval)}stopAutoLoad(){this.interval=0}notifyNewArrived(e,t){const s=this.applyMention(e),n={title:`GitHub ${this.name}`,message:t+" new event(s)",mentions:s};this.say("newArrived",{newItems:e,notify:n})}applyMention(e){if(!this.loginUser)return;const t=["issue","comment","pullRequest","review"];let s=0,n="@"+this.loginUser.login;return e.forEach(e=>{let i=e.payload;if(i.body&&i.body.indexOf(n)>-1)return e.mention=!0,void s++;t.some(t=>{if(i[t]&&i[t].body&&i[t].body.indexOf(n)>-1)return e.mention=!0,s++,!0})}),s}async fetchPullReqDetail(e,t,s){const n=(await this.v4client("query ($owner: String!, $repoName: String!, $number: Int!) {\n      repository(owner: $owner, name: $repoName) {\n        pullRequest(number: $number) {\n          number\n          title\n          url\n          author {\n            login\n            avatarUrl\n          }\n          baseRefName\n          headRefName\n          headRepository {\n            nameWithOwner\n          }\n          bodyHTML\n          state\n          mergeable\n          databaseId\n          updatedAt\n          reviewRequests(first: 10) {\n            edges {\n              node {\n                requestedReviewer {\n                  ... on User {\n                    login\n                    avatarUrl\n                  }\n                }\n              }\n            }\n          }\n          reviews(last: 5, states: [APPROVED, CHANGES_REQUESTED, DISMISSED, PENDING]) {\n            edges {\n              node {\n                author {\n                  login\n                  avatarUrl\n                }\n                resourcePath\n                bodyHTML\n                submittedAt\n                updatedAt\n                state\n              }\n            }\n          }\n        }\n      }\n    }",{owner:e,repoName:t,number:s})).repository.pullRequest;if(n.reviewRequests.edges.length)for(let e of n.reviewRequests.edges)if(e.node.requestedReviewer.login===this.loginUser.login)return n.kind="requested_review",n;let i={};if(n.reviews.edges.length)for(let e of n.reviews.edges){const t=e.node.author.login;t!==this.loginUser.login&&(n.kind="reviewed",i[t]=e.node)}return Object.values(i).map(e=>{const t=Object.assign({review:e},n);return t.updatedAt=e.updatedAt,t})}};function z(e,t){this.rootUrl=e,this.views=function(e){class t extends g{load(e,t){this.data.comment.diffHunk&&(this.findEl(".diffBody").innerHTML=Q(this.data.comment.diffHunk)),this.findEl(".commentBody").innerHTML=X(this.data.comment.body||"")}}t.setTemplate('\n    <div class="commitCommentEvent ghEvent">\n      <header>\n        <a class="repo" href="{{rootUrl}}/{{repo.name}}">{{repo.name}}</a>\n        <a class="eventTime" href="{{comment.htmlUrl}}"><time>{{comment.createdAt}}</time></a>\n      </header>\n      <div class="eventInfo">\n        <a class="actor" href="{{comment.user.htmlUrl}}">\n          <img class="avatar avatar-small" src="{{comment.user.avatarUrl}}">\n          <span>{{comment.user.login}}</span>\n        </a>\n        <span class="action"><span class="octicon octicon-comment"></span></span>\n        <span class="word" style="margin-left:.8ex">on</span>\n        <span class="repoTarget">\n          <span class="octicon octicon-git-commit"></span>\n          <a href="{{comment.htmlUrl}}">\n            <code>{{sha}}</code>\n            <span class="filePath">{{comment.path}}</span>\n          </a>\n        </span>\n      </div>\n      <div class="commentBody quote"></div>\n     </div>\n    </div>');class s extends g{load(e,t){const s=this.findEl(".issueBody");"opened"==this.data.action?(s.innerHTML=X(this.data.body||""),this.data.mention&&s.classList.add("mentioned")):s&&this.el.removeChild(s)}}s.setTemplate('\n    <div class="issueEvent ghEvent">\n      <header>\n        <a class="repo" href="{{rootUrl}}/{{repo.name}}">{{repo.name}}</a>\n        <a class="eventTime" href="{{htmlUrl}}"><time>{{createdAt}}</time></a>\n      </header>\n      <div class="eventInfo">\n        <a class="actor" href="{{rootUrl}}/{{actor.login}}">\n          <img class="avatar avatar-small" src="{{actor.avatarUrl}}">\n          <span>{{actor.login}}</span>\n        </a>\n        <p class="eventTitle">\n          <span class="octicon octicon-{{octicon}} {{action}}"></span>\n          <a class="issueTitle" href="{{htmlUrl}}">#{{number}} {{title}}</a>\n        </p>\n      </div>\n      <div class="issueBody quote"></div>\n    </div>');class n extends g{load(e,t){const s=this.findEl(".issueBody");if(t.issueBody_click=((e,t)=>{e.classList.toggle("full")}),this.data.comment.body){this.data.issue.body&&(s.innerHTML=X(this.data.issue.body),this.data.mention&&s.classList.add("mentioned"));var n=this.findEl(".commentBody");n.innerHTML=X(this.data.comment.body||""),this.data.mention&&n.classList.add("mentioned")}else if(null!=this.data.issue.labels){var i=this.data.issue.labels[0];s.innerHTML='<span style="background-color:#'+i.color+'">'+i.name+"</span>"}}}n.setTemplate('\n    <div class="issueEvent ghEvent">\n      <header>\n        <a class="repo" href="{{rootUrl}}/{{repo.name}}">{{repo.name}}</a>\n        <a class="eventTime" href="{{comment.htmlUrl}}"><time>{{comment.createdAt}}</time></a>\n      </header>\n      <div class="eventInfo">\n        <a class="actor" href="{{comment.user.htmlUrl}}">\n          <img class="avatar avatar-small" src="{{comment.user.avatarUrl}}">\n          <span>{{comment.user.login}}</span>\n        </a>\n        <span class="action"><span class="octicon octicon-comment-discussion"></span></span>\n      </div>\n      <div class="sub">\n        <p class="eventTitle">\n          <span class="octicon octicon-{{octicon}}"></span>\n          <a class="issueTitle" href="{{issue.htmlUrl}}">#{{issue.number}} {{issue.title}}</a>\n        </p>\n        <div class="issueBody quote"></div>\n      </div>\n      <div class="commentBody quote"></div>\n    </div>');class i extends g{load(e,t){var s=this.findEl(".pullReqBody");"closed"!==this.data.action?this.data.pullRequest.body&&(s.innerHTML=X(this.data.pullRequest.body||""),this.data.mention&&s.classList.add("mentioned")):s&&this.el.removeChild(s)}}i.setTemplate('\n    <div class="pullReqEvent ghEvent">\n      <header>\n        <a class="repo" href="{{rootUrl}}/{{repo.name}}">{{repo.name}}</a>\n        <a class="eventTime" href="{{pullRequest.htmlUrl}}"><time>{{createdAt}}</time></a>\n      </header>\n      <div class="eventInfo">\n        <a class="actor" href="{{rootUrl}}/{{actor.login}}">\n          <img class="avatar avatar-small" src="{{actor.avatarUrl}}">\n          <span>{{actor.login}}</span>\n        </a>\n        <span class="mergeTarget">\n          <a class="branch-ref" href="{{pullRequest.head.repo.htmlUrl}}/tree/{{pullRequest.head.ref}}">{{pullRequest.head.ref}}</a>\n          <span class="octicon octicon-arrow-small-right"></span>\n          <a class="branch-ref" href="{{pullRequest.base.repo.htmlUrl}}/tree/{{pullRequest.base.ref}}">{{pullRequest.base.ref}}</a>\n        </span>\n        <p class="eventTitle">\n          <span class="action {{action}}"><span class="octicon octicon-{{octicon}}"></span></span>\n          <a class="issueTitle" href="{{pullRequest.htmlUrl}}">#{{number}} {{pullRequest.title}}</a>\n        </p>\n      </div>\n      <div class="pullReqBody quote"></div>\n    </div>');class a extends g{load(e,t){var s=this.findEl(".issueBody");if(t.issueBody_click=((e,t)=>{e.classList.toggle("full")}),this.data.review.body){this.data.pullRequest.body&&(s.innerHTML=X(this.data.pullRequest.body));var n=this.findEl(".commentBody");n.innerHTML=X(this.data.review.body||""),this.data.mention&&n.classList.add("mentioned")}if(this.data.state.match(/^approved$/i)){var i=this.data.issue.labels[0];s.innerHTML='<span style="background-color:#'+i.color+'">'+i.name+"</span>"}}}a.setTemplate('\n    <div class="issueEvent ghEvent">\n      <header>\n        <a class="repo" href="{{rootUrl}}/{{repo.name}}">{{repo.name}}</a>\n        <a class="eventTime" href="{{review.htmlUrl}}"><time>{{review.submittedAt}}</time></a>\n      </header>\n      <div class="eventInfo">\n        <a class="actor" href="{{comment.user.htmlUrl}}">\n          <img class="avatar avatar-small" src="{{comment.user.avatarUrl}}">\n          <span>{{comment.user.login}}</span>\n        </a>\n        <span class="action"><span class="octicon octicon-comment-discussion"></span></span>\n      </div>\n      <div class="sub">\n        <p class="eventTitle">\n          <span class="octicon octicon-{{octicon}}"></span>\n          <a class="issueTitle" href="{{pullRequest.htmlUrl}}">#{{number}} {{pullRequest.title}}</a>\n        </p>\n        <div class="issueBody quote"></div>\n      </div>\n      <div class="commentBody quote"></div>\n    </div>');class o extends g{load(e,t){this.findEl(".diffBody").innerHTML=Q(this.data.comment.diffHunk);let s=this.findEl(".commentBody");s.innerHTML=X(this.data.comment.body||""),this.data.mention&&s.classList.add("mentioned")}}o.setTemplate('\n    <div class="issueEvent ghEvent">\n      <header>\n        <a class="repo" href="{{rootUrl}}/{{repo.name}}">{{repo.name}}</a>\n        <a class="eventTime" href="{{comment.htmlUrl}}"><time>{{comment.createdAt}}</time></a>\n      </header>\n      <div class="eventInfo">\n        <a class="actor" href="{{comment.user.htmlUrl}}">\n          <img class="avatar avatar-small" src="{{comment.user.avatarUrl}}">\n          <span>{{comment.user.login}}</span>\n        </a>\n        <span class="action"><span class="octicon octicon-comment"></span></span>\n      </div>\n      <div class="sub">\n        <p class="eventTitle">\n          <span class="octicon octicon-git-pull-request"></span>\n          <a class="issueTitle" href="{{pullRequest.htmlUrl}}">#{{pullRequest.number}} {{pullRequest.title}}</a>\n        </p>\n        <div class="diff quote">\n          <p class="filePath"><a href="{{comment.htmlUrl}}">{{comment.path}}</a></p>\n          <div class="diffBody"></div>\n        </div>\n      </div>\n      <div class="commentBody quote"></div>\n    </div>');class r extends g{load(e,t){t.msg_click=function(e,t){e.classList.toggle("expanded")}}}r.setTemplate('\n    <p class="pushCommit">\n      <a href="{{commitUrl}}"><code>{{sha}}</code></a>\n      <span class="msg">{{message}}</span>\n    </p>');class l extends g{load(e,t){e.commits=new y(this.findEl(".pushCommits"),r)}}l.setTemplate('\n    <div class="pushEvent ghEvent">\n      <header>\n        <a class="repo" href="{{rootUrl}}/{{repo.name}}">{{repo.name}}</a>\n        <a class="eventTime" href="{{htmlUrl}}"><time>{{createdAt}}</time></a>\n      </header>\n\n      <div class="eventInfo">\n        <a class="actor" href="{{rootUrl}}/{{actor.login}}">\n          <img class="avatar avatar-small" src="{{actor.avatarUrl}}">\n          <span>{{actor.login}}</span>\n        </a>\n        <span class="action push">\n          <span class="word">pushed</span>\n          <span class="octicon octicon-repo-push"></span>\n        </span>\n        <span class="repoTarget">\n          <a class="branch-ref" href="{{rootUrl}}/{{repo.name}}/tree/{{branch}}">{{branch}}\n          </a>\n        </span>\n      </div>\n\n      <div class="pushCommits"></div>\n    </div>');class c extends g{}c.setTemplate('\n    <span>\n      <span class="word">{{action}}</span>\n      <span class="action wiki"><span class="octicon octicon-{{octicon}}"></span></span>\n      <a class="repoTarget" href="{{htmlUrl}}">{{title}}</a>\n    </span>');class d extends g{load(e,t){e.pages=new y(this.findEl(".gollumPageUpdates"),c)}}d.setTemplate('\n    <div class="gollumEvent ghEvent">\n      <header>\n        <a class="repo" href="{{rootUrl}}/{{repo.name}}">{{repo.name}}</a>\n        <span class="eventTime"><time>{{createdAt}}</time></span>\n      </header>\n      <div class="eventInfo">\n        <a class="actor" href="{{actor.url}}">\n          <img class="avatar avatar-small" src="{{actor.avatarUrl}}">\n          <span>{{actor.login}}</span>\n        </a>\n        <span class="gollumPageUpdates"></span>\n      </div>\n    </div>');const h={CommitCommentView:t,GollumView:d,IssuesView:s,IssueCommentView:n,PullRequestView:i,PullRequestReviewView:a,PullRequestReviewCommentView:o,PushView:l};return h.CreateView=g.extend('\n    <div class="createEvent ghEvent">\n      <time class="eventTime">{{createdAt}}</time>\n      <div class="eventInfo">\n        <a class="actor" href="{{rootUrl}}/{{actor.login}}">\n         <img class="avatar avatar-small" src="{{actor.avatarUrl}}">\n         <span>{{actor.login}}</span>\n        </a>\n        <span class="word">created</span>\n        <span class="repoTarget">\n          <span class="octicon octicon-{{octicon}}"></span>\n          <a class="repo" href="{{rootUrl}}/{{repo.name}}">{{repo.name}}</a>\n        </span>\n      </div>\n    </div>'),h.ForkView=g.extend('\n    <div class="forkEvent ghEvent">\n      <time class="eventTime">{{createdAt}}</time>\n      <div class="eventInfo">\n        <a class="actor" href="{{rootUrl}}/{{actor.login}}">\n          <img class="avatar avatar-small" src="{{actor.avatarUrl}}">\n          <span>{{actor.login}}</span>\n        </a>\n        <span class="word">forked</span>\n        <a href="{{forkee.htmlUrl}}" class="action fork"><span class="octicon octicon-repo-forked"></span></a>\n        <span class="repoTarget">\n          <a class="repo" href="{{rootUrl}}/{{repo.name}}">{{repo.name}}</a>\n        </span>\n      </div>\n    </div>'),h.MemberView=g.extend('\n    <div class="memberEvent ghEvent">\n      <time class="eventTime">{{createdAt}}</time>\n      <div class="eventInfo">\n        <a class="actor" href="{{rootUrl}}/{{actor.login}}">\n          <img class="avatar avatar-small" src="{{actor.avatarUrl}}">\n          <span>{{actor.login}}</span>\n        </a>\n        <span class="word">{{action}}</span>\n        <a class="actor" href="{{rootUrl}}/{{member.login}}">\n          <img class="avatar avatar-small" src="{{member.avatarUrl}}">\n          <span>{{member.login}}</span>\n        </a>\n        <span class="octicon octicon-arrow-small-right"></span>\n        <span class="repoTarget">\n          <a class="repo" href="{{rootUrl}}/{{repo.name}}">{{repo.name}}</a>\n        </span>\n      </div>\n    </div>'),h.PublicView=g.extend('\n    <div class="publicEvent ghEvent">\n      <time class="eventTime">{{createdAt}}</time>\n      <div class="eventInfo">\n        <a class="actor" href="{{rootUrl}}/{{actor.login}}">\n          <img class="avatar avatar-small" src="{{actor.avatarUrl}}">\n          <span>{{actor.login}}</span>\n        </a>\n        <span class="word">made</span>\n        <span class="repoTarget">\n          <a class="repo" href="{{rootUrl}}/{{repo.name}}">{{repo.name}}</a>\n        </span>\n        <span class="word">public</span>\n      </div>\n    </div>'),h.ReleaseView=g.extend('\n    <div class="releaseEvent ghEvent">\n      <header>\n        <a class="repo" href="{{rootUrl}}/{{repo.name}}">{{repo.name}}</a>\n        <a class="eventTime" href="{{htmlUrl}}"><time>{{createdAt}}</time></a>\n      </header>\n\n      <div class="eventInfo">\n        <a class="actor" href="{{author.htmlUrl}}">\n          <img class="avatar avatar-small" src="{{author.avatarUrl}}">\n          <span>{{author.login}}</span>\n        </a>\n        <span class="word">released</span>\n        <span class="repoTarget">\n          <a href="{{htmlUrl}}"><span class="octicon octicon-tag"></span> {{tagName}}</a>\n        </span>\n        <span class="repoTarget">\n          <span class="word">on</span>\n          <span class="branch-ref">{{targetCommitish}}</span>\n        </span>\n      </div>\n    </div>'),h.WatchView=g.extend('\n    <div class="watchEvent ghEvent">\n      <time class="eventTime">{{createdAt}}</time>\n      <div class="eventInfo">\n        <a class="actor" href="{{rootUrl}}/{{actor.login}}">\n          <img class="avatar avatar-small" src="{{actor.avatarUrl}}">\n          <span>{{actor.login}}</span>\n        </a>\n        <span class="action star"><span class="octicon octicon-star"></span></span>\n        <span class="repoTarget">\n          <a class="repo" href="{{rootUrl}}/{{repo.name}}">{{repo.name}}</a>\n        </span>\n      </div>\n    </div>'),h}()}function Q(e){for(var t=e.split("\n"),s=['<p class="head">'+t[0]+"</p>"],n=1,i=t.length;n<i;n++){var a=t[n].charAt(0);"+"===a?s.push('<p class="plus">'+t[n]+"</p>"):"-"===a?s.push('<p class="minus">'+t[n]+"</p>"):s.push('<p class="normal">'+t[n]+"</p>")}return s.join("")}z.prototype={createView:function(e){return e.type in this?this[e.type](e):null},CommitCommentEvent:function(e){var t=e.payload;return t.mention=e.mention,t.rootUrl=this.rootUrl,t.actor=t.comment.user,t.repo=e.repo,t.sha=t.comment.commitId.substr(0,6),t.comment.createdAt=H(t.comment.createdAt),new this.views.CommitCommentView({data:t})},CreateEvent:function(e){var t=e.payload;if("repository"===t.refType)return t.rootUrl=this.rootUrl,t.actor=e.actor,t.repo=e.repo,t.repo.rootUrl="https://github.com",t.createdAt=H(e.createdAt),t.octicon="repo",new this.views.CreateView({data:t})},ForkEvent:function(e){var t=e.payload;return t.rootUrl=this.rootUrl,t.actor=e.actor,t.repo=e.repo,t.createdAt=H(e.createdAt),new this.views.ForkView({data:t})},GollumEvent:function(e){const t=e.payload;return t.rootUrl=this.rootUrl,t.actor=e.actor,t.repo=e.repo,t.createdAt=H(e.createdAt),t.pages=t.pages.map(e=>({sha:e.sha.substr(0,6),action:e.action,octicon:"created"===e.action?"book":"pencil",title:e.title,htmlUrl:e.htmlUrl})),new this.views.GollumView({data:t})},IssuesEvent:function(e){var t=e.payload.issue;return t.mention=e.mention,t.rootUrl=this.rootUrl,t.octicon="issue-"+e.payload.action,t.action=e.payload.action,t.actor=e.actor,t.repo=e.repo,t.createdAt=H(e.createdAt),new this.views.IssuesView({data:t})},IssueCommentEvent:function(e){var t=e.payload;return t.mention=e.mention,t.rootUrl=this.rootUrl,t.actor=e.actor,t.repo=e.repo,t.octicon=t.issue.pullRequest?"git-pull-request":"issue-opened",t.createdAt=H(e.createdAt),t.comment.createdAt=H(t.comment.createdAt),new this.views.IssueCommentView({data:t})},MemberEvent:function(e){var t=e.payload;return t.rootUrl=this.rootUrl,t.actor=e.actor,t.repo=e.repo,t.createdAt=H(e.createdAt),new this.views.MemberView({data:t})},PublicEvent:function(e){var t=e.payload;return t.rootUrl=this.rootUrl,t.actor=e.actor,t.repo=e.repo,t.createdAt=H(e.createdAt),new this.views.PublicView({data:t})},PullRequestEvent:function(e){var t=e.payload;return t.mention=e.mention,t.rootUrl=this.rootUrl,t.actor=e.actor,t.repo=e.repo,t.createdAt=H(e.createdAt),t.pullRequest.createdAt=H(t.pullRequest.createdAt),"opened"==t.action?t.octicon="git-pull-request":"closed"==t.action&&t.pullRequest.merged?(t.action="merged",t.octicon="git-merge"):t.octicon="circle-slash",new this.views.PullRequestView({data:t})},PullRequestReviewEvent:function(e){var t=e.payload;return t.mention=e.mention,t.rootUrl=this.rootUrl,t.actor=e.actor,t.repo=e.repo,t.createdAt=H(e.createdAt),t.review.submittedAt=H(t.review.submitted_at),t.review.state.match(/^approved$/i)?t.octicon="check":"closed"==t.action&&t.pullRequest.merged?(t.action="merged",t.octicon="git-merge"):t.octicon="circle-slash",new this.views.PullRequestReviewView({data:t})},PullRequestReviewCommentEvent:function(e){var t=e.payload;return t.mention=e.mention,t.rootUrl=this.rootUrl,t.actor=e.actor,t.repo=e.repo,t.createdAt=H(e.createdAt),t.comment.createdAt=H(t.comment.createdAt),new this.views.PullRequestReviewCommentView({data:t})},PushEvent:function(e){var t,s=e.payload;return s.rootUrl=this.rootUrl,s.branch=s.ref.replace(/^refs\/heads\//,""),s.shortSha=s,s.actor=e.actor,s.repo=e.repo,s.commits=(t=this.rootUrl+"/"+s.repo.name,s.commits.map(function(e){return{sha:e.sha.substr(0,6),commitUrl:t+"/commit/"+e.sha,message:e.message}})),s.createdAt=H(e.createdAt),new this.views.PushView({data:s})},ReleaseEvent:function(e){var t=e.payload.release;return t.rootUrl=this.rootUrl,t.repo=e.repo,t.createdAt=H(t.publishedAt),new this.views.ReleaseView({data:t})},WatchEvent:function(e){var t=e.payload;return t.rootUrl=this.rootUrl,t.actor=e.actor,t.repo=e.repo,t.createdAt=H(e.createdAt),new this.views.WatchView({data:t})}};const Y=new marked.Renderer;function X(e){return marked(e,{renderer:Y})}Y.heading=function(e,t,s){return"<h"+t+">"+e+"</h"+t+">\n"};var Z=z;function ee(e,t){this.rootUrl=e,this.views=function(e){class t extends g{load(e,t){var s=this.findEl(".pullReqBody");"closed"!==this.data.action?s.innerHTML=this.data.bodyHTML:s&&this.el.removeChild(s)}}t.setTemplate('\n    <div class="pullReqEvent ghEvent">\n      <header>\n        <a class="repo" href="{{rootUrl}}/{{headRepository.nameWithOwner}}">{{headRepository.nameWithOwner}}</a>\n        <a class="eventTime" href="{{url}}"><time>{{updatedAt}}</time></a>\n      </header>\n      <div class="eventInfo">\n        <a class="actor" href="{{rootUrl}}/{{author.login}}">\n          <img class="avatar avatar-small" src="{{author.avatarUrl}}">\n          <span>{{author.login}}</span>\n        </a>\n        <span class="action requested_review">\n          <span class="word">requested you review</span>\n        </span>\n        <p class="eventTitle">\n          <span class="action {{action}}"><span class="octicon octicon-{{octicon}}"></span></span>\n          <a class="issueTitle" href="{{url}}">#{{number}} {{title}}</a>\n        </p>\n      </div>\n      <div class="pullReqBody quote"></div>\n    </div>');class s extends g{load(e,t){var s=this.findEl(".issueBody");t.issueBody_click=((e,t)=>{e.classList.toggle("full")}),s.innerHTML=this.data.bodyHTML;var n=this.findEl(".commentBody");n.innerHTML=this.data.review.bodyHTML}}return s.setTemplate('\n    <div class="issueEvent ghEvent">\n      <header>\n        <a class="repo" href="{{rootUrl}}/{{headRepository.nameWithOwner}}">{{headRepository.nameWithOwner}}</a>\n        <a class="eventTime" href="{{url}}"><time>{{updatedAt}}</time></a>\n      </header>\n      <div class="eventInfo">\n        <a class="actor" href="{{rootUrl}}/{{review.author.login}}">\n          <img class="avatar avatar-small" src="{{review.author.avatarUrl}}">\n          <span>{{review.author.login}}</span>\n        </a>\n        <span class="action">\n          <span class="word">{{action}}</span>\n        </span>\n        <span class="action"><span class="octicon octicon-{{actionOcticon}}"></span></span>\n      </div>\n      <div class="sub">\n        <p class="eventTitle">\n          <span class="octicon octicon-{{octicon}}"></span>\n          <a class="issueTitle" href="{{url}}">#{{number}} {{title}}</a>\n        </p>\n        <div class="issueBody quote"></div>\n      </div>\n      <div class="commentBody quote"></div>\n    </div>'),{PullRequestReviewRequestedView:t,PullRequestReviewedView:s}}()}ee.prototype={createView:function(e){if(e.rootUrl=this.rootUrl,e.updatedAt=H(e.updatedAt),e.reviewRequest&&(e.reviewRequest.submittedAt=H(e.reviewRequest.submittedAt)),"requested_review"===e.kind){const{state:t}=e;return"OPEN"==t?e.octicon="git-pull-request":"MERGED"===t?e.octicon="git-merge":"CLOSED"===t&&(e.octicon="circle-slash"),new this.views.PullRequestReviewRequestedView({data:e})}if("reviewed"===e.kind){switch(e.review.state){case"APPROVED":e.action="approved",e.actionOcticon="check";break;case"CHANGES_REQUESTED":e.action="requested the changes",e.actionOcticon="x";break;default:e.action="commented",e.actionOcticon="comment"}return new this.views.PullRequestReviewedView({data:e})}}};var te=ee;class se extends g{load(e,t){const{viewFactory:s}=this.data,n=s.createView(this.data);n&&(this.add("item",n),this.data.newArrival&&this.el.classList.add("newArrival"))}}se.setTemplate('<div class="githubItem"></div>');class ne extends g{constructor(e){const t=new r;e.data.eventList=t,super(e),this.items=t}load(e,t){const s=this.data;s.width&&this.el.classList.add(s.width),this.loadStream(s);e.eventList=new y(this.findEl(".timelineBody"),se);t.timelineHeader_click=(()=>{this.fire("clickedTimelineHeader",this.data)}),t.clickedTimelineHeader=((e,t)=>{$(this.findEl(".timelineBody")).animate({scrollTop:0})})}unload(){this.model.stopAutoLoad()}destroyed(){return!this.el.parentNode}loadStream(e){let{token:t,endpoint:s}=e;s&&s.match(/^https?\:\/\/github\.com\/?$/)&&(s=null),this.model=new K(t,s),this.model.activate(e).then(()=>{this.findEl(".timelineHeader > a").href=this.model.url,"event"===this.model.type?this.viewFactory=new Z(this.model.webUrl):"notification"===this.model.type&&(this.viewFactory=new te(this.model.webUrl))}).catch(e=>{alert("Can't fetch GitHub information")}),this.model.listen("refresh",e=>this.refreshed(e)),this.model.listen("newArrived",e=>this.loadMore(e))}refreshed({items:e,notify:t}){e.forEach(e=>{e.viewFactory=this.viewFactory}),this.items.reset(e),t&&O.say("notify",Object.assign({notify:this.model.notify},t))}loadMore({newItems:e,notify:t}){this.destroyed()||(t&&O.say("notify",t),e.reverse().forEach(e=>{e.viewFactory=this.viewFactory,e.newArrival=!0,this.items.add(e,0)}),this.findEl("header").classList.add("newArrival"))}}ne.setTemplate('\n  <div class="deckColumn">\n    <div class="timeline github">\n      <header class="timelineHeader">\n        <a href="{{url}}" target="_blank">\n          <span class="service">GitHub</span>\n          <span class="project">{{caption}}</span>\n        </a>\n      </header>\n      <div class="timelineBody"></div>\n    </div>\n  </div>');var ie=ne;class ae extends y{load(e,t){(e=>{e.indexOf("windows")>-1&&-1===e.indexOf("phone")&&-1===e.indexOf("touch")&&(this.el.className="windowsScroller")})(window.navigator.userAgent.toLowerCase());const s=document.documentElement.clientWidth;if(s>440)this.el.classList.add("bounding");else{this.scrollLeft=0,this.columnIdx=0;let e,n=0,i=0;t.touchstart=((t,s)=>{e=n=s.touches[0].pageX,i=s.touches[0].pageY}),t.touchmove=((t,s)=>{let a=s.touches[0].pageX,o=s.touches[0].pageY;i<0||Math.abs(o-i)>Math.abs(a-n)/2?i=null:(this.scrollLeft=n-a,e=a)}),t.touchend=((t,a)=>{null!==i?(Math.abs(this.scrollLeft)>=30&&(e>n?this.columnIdx--:this.columnIdx++),this.el.scrollLeft!==this.columnIdx*s&&$(this.el).animate({scrollLeft:this.columnIdx*s},80)):$(this.el).animate({scrollLeft:this.columnIdx*s},120)})}O.listen("clear",()=>{document.querySelectorAll(".newArrival").forEach(e=>e.classList.remove("newArrival"))})}itemClass(e){return"backlog"==e.service?J:"github"==e.service?ie:void 0}}const oe=new r;var re=class extends p{constructor(){super("views/deck.html")}load(e,t){e.deckView=new ae("#deck"),window.history.replaceState({},document.title,window.location.pathname);const s=this.loadTimelines();s.length?oe.reset(s):w.go("intro")}context(){return{deckView:oe}}loadTimelines(){try{const e=localStorage.getItem("timelines");return JSON.parse(e)||[]}catch(e){return[]}}};const le=new r;var ce=class extends p{constructor(){super("views/demo.html")}load(e,t){e.deckView=new ae("#deck"),le.reset(this.loadTimelines()),this.timeoutId=setTimeout(()=>{alert("Demo exiting and return introduction page"),w.go("intro")},12e4)}unload(){this.timeoutId&&clearTimeout(this.timeoutId)}title(){return"Demo"}context(){return{deckView:le}}loadTimelines(){return[{service:"github",width:"wide",notify:"off",kind:"public_timeline",caption:"Public Timeline",token:null,endpoint:null}]}};w.activate(class extends p{constructor(){super(document.body,{childFrame:"#contentBody"})}title(e){return e?`Deck - ${e}`:"Deck"}},{index:re,intro:class extends p{constructor(){super("views/intro.html")}load(e,t){window.history.replaceState({},document.title,window.location.pathname)}title(){return"Deck - Introduction"}},demo:ce,term:class extends p{constructor(){super("views/term.html")}title(){return"Terms & Privacy"}},settings:{index:class extends p{constructor(){super("views/settings.html")}title(){return"Settings"}},timeline:class extends p{constructor(){super("views/settings/timeline.html")}title(){return"Customize timelines"}load(e,t){V.setTemplate("#column"),e.showcase=new P("#showcase",V,{data:N}),N.reset(this.loadTimelines());let s=this.newTimeline;s&&N.add(s),t.cancelButton_click=(()=>{this.needSave=!1,w.go("settings")}),t.saveButton_click=(()=>{this.needSave=!0,w.go("/",{timelines:N})})}unload(){this.needSave&&(localStorage.setItem("timelines",JSON.stringify(N._data)),N.some(e=>"off"!=e.notify)&&"Notification"in window&&Notification.requestPermission())}loadTimelines(){try{const e=localStorage.getItem("timelines");return e?JSON.parse(e):[]}catch(e){return[]}}},backlog:C,github:x,port:class extends p{constructor(){super("views/settings/port.html")}title(){return"Import/Export setting"}load(e,t){t.importButton_click=(()=>{try{const e=JSON.parse(this.findEl("#snippet").value);if(!e.timelines||!e.defaults)return void alert("Invalid data");localStorage.setItem("defaults",JSON.stringify(e.defaults)),localStorage.setItem("timelines",JSON.stringify(e.timelines)),w.go("deck")}catch(e){alert("Invalid JSON format")}return!1}),t.exportButton_click=(()=>{const e=localStorage.getItem("defaults"),t=localStorage.getItem("timelines");return this.findEl("#snippet").value=JSON.stringify({defaults:e,timelines:t}),!1}),t.snippet_focus=(()=>{this.select()})}},credit:class extends p{constructor(){super("views/settings/credit.html")}title(){return"Credit"}}}},{mode:"HASH"})}]);