!function(e){var t={};function n(s){if(t[s])return t[s].exports;var a=t[s]={i:s,l:!1,exports:{}};return e[s].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(s,a,function(t){return e[t]}.bind(null,a));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";function s(e,t){Object.entries(e).forEach(t)}n.r(t);const a=function*(){let e=0;for(;;)yield e++}();var i=class{constructor(){const e={};s(this._privates(),([t,n])=>{e[t]={value:n}}),Object.defineProperties(this,e)}_privates(){return{_F_obs:new Map}}listened(e,t){t?this._listened(e,t):s(e,([e,t])=>this._listened(e,t))}unlistened(e,t){const n=this._F_obs.get(e);n&&n.delete(t)}unescapeHtml(e){return(new DOMParser).parseFromString(e,"text/html").documentElement.textContent}say(e,t){this._say(e,e,t),this._say("*",e,t)}_listened(e,t){const n=this._F_obs.get(e);n?n.add(t):this._F_obs.set(e,new Set([t]))}_say(e,t,n){const s=this._F_obs.get(e);void 0!==s&&s.forEach(e=>{if(this._isFn(e))return void e.call(this,n);let s=e[t];this._isFn(s)&&s.call(e,n)})}_callR(e,t,n,s){let a=s?this[s]:this;a&&(a=a[n]),a&&a.apply(this,e);const i=this[t];if(i)for(let a in i){const o=i[a];o._callR&&o._callR(e,t,n,s)}}_isStr(e){return"string"==typeof e}_isFn(e){return"function"==typeof e}};class o{constructor(e,t){if(this.req=e,"string"==typeof t)this.res=null,this.isTimeout="timeout"===t,this.isAborted="abort"===t,this.isNetworkError="error"===t;else{this.res=t;let e=this.res.status;this.isBadRequest=400===e,this.isUnauthorized=401===e,this.isForbidden=403===e,this.isNotFound=404===e,this.isConflict=409===e,this.isServerError=e>=500}}}class r{constructor(e={}){this.baseURL=e.baseURL||"",this.headers=e.headers||{},this.beforeRequest=e.beforeRequest||(async()=>{}),this.beforeError=e.beforeError||(async()=>!0),(e.bodyType||"").includes("form")?this.contentType="application/x-www-form-urlencoded":this.contentType="application/json;charset=UTF-8"}get(e,t={}){const{query:n,body:s,headers:a}=t;return this.exec("GET",e,n,s,a)}post(e,t={}){const{query:n,body:s,headers:a}=t;return this.exec("POST",e,n,s,a)}put(e,t={}){const{query:n,body:s,headers:a}=t;return this.exec("PUT",e,n,s,a)}patch(e,t={}){const{query:n,body:s,headers:a}=t;return this.exec("PATCH",e,n,s,a)}delete(e,t={}){const{query:n,body:s,headers:a}=t;return this.exec("DELETE",e,n,s,a)}async exec(e,t,n,s,a={}){"Content-Type"in(a=Object.assign({},this.headers,a))||(a["Content-Type"]=this.contentType),await this.beforeRequest(t,{query:n,body:s,headers:a});const i={method:e,path:t,headers:a};let r;try{const l=await this._request(e,t,{query:n,body:s,headers:a}),{status:c}=l;if(c<400)return l;r=new o(i,l)}catch(e){r=new o(i,e)}if(!1!==await this.beforeError(r))throw r}_request(e,t,{query:n,body:s,headers:a}){let i;if(s){const e=a["Content-Type"];if(e.match(/\/form-data/)){i=new FormData;for(let e in s)i.append(e,s[e]);delete a["Content-Type"]}else i=e.match(/\/json/)?JSON.stringify(s):this._formatParams(s)}else i=void 0;let o=t;return this.baseURL&&!o.match(/^[a-z]{2,5}:\/\//)&&(o=this.baseURL+o),n&&(o+="?"+this._formatParams(n)),new Promise((t,n)=>{let s=new XMLHttpRequest;s.open(e,o,!0);for(let e in a)s.setRequestHeader(e,a[e]);s.onload=e=>{let n,a=s.getResponseHeader("Content-Type");n=null===a?null:a.match(/\/json/)?JSON.parse(s.response):a.match(/\/form/)?this._fromFormData(s.response):s.response,t({status:s.status,headers:s.getAllResponseHeaders(),body:n})},s.onabort=function(e){n("abort")},s.onerror=function(e){n("error")},s.ontimeout=function(e){n("timeout")},s.send(i)})}_formatParams(e){return new URLSearchParams(e).toString()}_fromFormData(e){const t={};return e.split("&").forEach(e=>{const[n,s]=e.split("=");t[decodeURIComponent(n)]=decodeURIComponent(s)}),t}}class l extends i{constructor(e={}){super(),Object.assign(this,e)}add(e,t){const n=this[e];let s;void 0!==n&&n instanceof Array?(n.push(t),s=n):s=n+t,this._updateField(e,s)}toggle(e){const t=Boolean(this[e]);this._updateField(e,!t)}update(e){s(e,([e,t])=>this._updateField(e,t))}destroy(){this.say("destroy",{})}_updateField(e,t){const n=this[e];n instanceof l?n instanceof c?n.reset(t):n.update(t):(this[e]=t,this.say("update",{field:e,newValue:t,oldValue:n}))}}class c extends l{constructor(e=[],t={}){super(),t.wrapItem?!0===t.wrapItem?this._F_itemClass=l:this._F_itemClass=t.wrapItem:this._F_itemClass=null,this._data=e.map(e=>this._wrapItem(e))}itemClass(e){return this._F_itemClass}get(e){return this._data[e]}add(e,t){e=this._wrapItem(e),void 0===t?this._data.push(e):this._data.splice(t,0,e),this.say("add",{item:e,index:t})}update(e,t){void 0===t&&(t=this._data.indexOf(e)),this._data[t]!==e&&(e=this._wrapItem(e),this._data[t]=e),this.say("update",{item:e,index:t})}remove(e){let t;t="number"!=typeof e?this._data.indexOf(e):e;const n=this._data.splice(t,1)[0];this.say("remove",{item:n,index:t})}addAll(e,t){e.forEach(e=>this.add(e,t))}removeAll(e={}){const{reverse:t=!1}=e;if(t)for(let e=this.length-1;e>=0;e--)this.remove(e);else for(;this._data.length;)this.remove(0)}removeLast(){this.remove(this.length-1)}reset(e=[]){this.removeAll(),this.addAll(e)}find(e,t){const n=this.indexOf(e,t);return n>=0?this._data[n]:void 0}indexOf(e,t){let n;if(void 0!==t)n=n=>n[e]===t;else{if(!this._isFn(e))return this._data.indexOf(e);n=e}for(let e=0,t=this._data.length;e<t;e++)if(n(this._data[e]))return e;return-1}forEach(e){this._data.forEach(e)}some(e){return this._data.some(e)}get length(){return this._data.length}[Symbol.iterator](){return this._data[Symbol.iterator]()}_wrapItem(e){if(!(e instanceof l)){const t=this.itemClass(e);if(t)return new t(e)}return e}}class d{constructor(e){this._item=e,e.listened("*",this)}destroy(){this._item.unlistened("*",this),this._item=null}}class h extends d{constructor(e,t){super(e),this._view=t}update({field:e,newValue:t,oldValue:n}){this._view.update(e,t,n)}}class u extends d{constructor(e,t){super(e),this._view=t}add({item:e,index:t}){void 0===t?this._view.addItem(e):this._view.insertItem(e,t)}update({item:e,index:t}){this._view.updateItem(e,t)}remove({item:e,index:t}){this._view.removeItem(e,t)}}const p=["click","submit","change"];class m extends i{constructor(e={}){super(),this.el=null,this.views={};const{rootEl:t,...n}=e;this._build(t,n)}_privates(){return Object.assign(super._privates(),{_F_onevts:new Set,_F_binders:[],_F_elcache:new Map})}init(e){}load(e){}handle(e){}completed(){}unload(){}broadcast(e,t=[]){this._callR(t,"views",e)}_build(e,t){const n=this._setupProps(t),s=this.init(n);this._data=void 0!==s?s:n,this._setRootNode(e,t.parent||null,this._data),this.el&&this._loadFinish()}_setupProps(e){let t;return e&&(t=e.data,"data"in e&&delete e.data,Object.assign(this,e)),t}_setRootNode(e,t,n){if(this._isStr(e)&&!(e=t?t.findEl(e):document.getElementById(e)))throw new Error(`Failed to create View because element not found ID: ${e}`);this.html?(this.el=this._buildFromHtml(n),t?t.appendEl(this.el):e&&e.parentNode.replaceChild(this.el,e)):e&&(this.el=e)}_loadFinish(){const e=this.contentEl;this.contentEl=this._isStr(e)?this.findEl(e):this.el,this._loadViewsEvts(),this._setDataToUI(),this._bindData(),this.completed()}_loadViewsEvts(){this.load(this.views),s(this.views,([e,t])=>{if(t.el){if(t.el.parentNode instanceof DocumentFragment){const n=this.findEl(e);n?n.parentNode.replaceChild(t.el,n):this.appendEl(t.el)}}else t.el=this.findEl(e),t._loadFinish()});const e={};this.handle(e),this._setupEvts(m._parseEvts(e))}_bindData(){const e=this._data;e instanceof l&&this._F_binders.push(new h(e,this))}_unbindData(){const e=this._F_binders.pop();e&&e.destroy()}get data(){return this._data}set data(e){this._data=e,this._unbindData(),this._setDataToUI(),this._bindData()}findEl(e){const t=this._F_elcache.get(e);if(t&&t.parentNode)return t;const n=this.el.querySelector(`[data-id="${e}"]`)||document.getElementById(e);return this._F_elcache.set(e,n),n}appendEl(e){this.contentEl.appendChild(e)}add(e,t){this.views[e]=t,this.appendEl(t.el)}remove(e){const t=this.views[e];t.destroy(),t.el.remove(),delete this.views[e]}fire(e,t){const n=t?new CustomEvent(e,{detail:t,bubbles:!0}):new Event(e,{bubbles:!0});this.el.dispatchEvent(n)}destroy(){this.unload(),Object.values(this.views).forEach(e=>e.destroy()),this.views={},this._F_elcache.clear(),this._unbindData(),this._teardownEvts(),this.parent=null}update(e,t,n){return this._setFieldValue(e,t)}_setDataToUI(){const e=this._data;void 0!==e&&e instanceof Object&&s(this._data,([e,t])=>{this._setFieldValue(e,t)})}_setFieldValue(e,t){if(e in this.views)return this.views[e].data=t,!0;const n=this.findEl(e);return!!n&&(n.dataset&&"html"===n.dataset.type?n.innerHTML=t:"value"in n?n.value=t:n.textContent=t,!0)}_setupEvts(e){s(e,([e,t])=>{if("_"===e)return void this._setEvts(this.el,t);const n=this.findEl(e);n&&(n instanceof NodeList?Array.from(n):[n]).forEach(e=>this._setEvts(e,t))})}_setEvts(e,t){s(t,([t,n])=>{this._trapEvt(this,e,t,n)})}_trapEvt(e,t,n,s){const a=function(t){const n=s.call(e,this,t);return void 0!==n&&n};p.includes(n)?t["on"+n]=a:t.addEventListener(n,a),this._F_onevts.add([t,n,a])}_teardownEvts(){const e=this._F_onevts;e.forEach(([e,t,n])=>{p.includes(t)?e["on"+t]=null:e.removeEventListener(t,n)}),e.clear()}_buildFromHtml(e){const t=document.createElement("template");t.innerHTML=this.html(e||{});const n=document.adoptNode(t.content);return this._firstEl(n)}_firstEl(e){const t=e.firstElementChild;if(void 0!==t)return t;const n=e.childNodes;for(let e=0,t=n.length;e<t;e++){const t=n[e];if(t.nodeType===Node.ELEMENT_NODE)return t}return null}static _parseEvts(e){const t={_:{}};return s(e,([e,n])=>{const s=e.lastIndexOf("_");if(-1===s)return void(t._[e]=n);const a=e.substr(0,s),i=e.substr(s+1),o=t[a];o?o[i]=n:t[a]={[i]:n}}),t}}var v=m;class f extends v{title(){return""}destroy(){super.destroy(),this.el.remove()}}class g{constructor(e,t){this._routeTree=this._parseRoute(e),this._lastRoute=null,this.onMove=t}canGo(e){return null!==this.getRoute(e)}move(e){this.onMove(this.getRoute(e))}getRoute(e){e.startsWith("/")||(e="/"+e);let t=e;"/"===t&&(t+="index"),t=this._chopEndSlash(t),t.endsWith(".html")&&(t=t.substr(0,t.length-5));const n=this._parsePath(t);let s,a=this._routeTree,i={},o=null;for(;void 0!==(s=n.shift());){let r;if(s in a)r=a[s];else{if(!("_any_"in a))throw alert(`${t} page isn't defined`),"/";if(i[a._any_.id]=s,a=a._any_.children,n.length>0)continue;r=a.index}if(this._isStr(r)){const t=this._resolve(e,r);return window.history.replaceState(null,null,t),this.getRoute(t)}r.prototype instanceof f?o={view:r,ctx:i}:(a=r,0===n.length&&n.unshift("index"))}if(o)return o;throw alert(`${path} page not found`),"/"}_parsePath(e){const t=e.split("/");return t.shift(),t}_parseRoute(e){const t={};return s(e,([e,n])=>{const s=n.prototype instanceof f||this._isStr(n);if(e.startsWith(":")){(t._any_={id:e.substr(1)}).children=s?{index:n}:this._parseRoute(n)}else t[e]=s?n:this._parseRoute(n)}),t}_resolve(e,t){if(t.startsWith("/"))return t;const n=e.split("/");let s;for(;s=t.match(/^\.\.\/?(.*)$/);)n.pop(),t=s[1];return n.join("/")+t}_chopEndSlash(e){return e.endsWith("/")?e.substr(0,e.length-1):e}_isStr(e){return"string"==typeof e}}class b extends g{constructor(e,t,n){super(e,t);let s=n;if(!s){let e=document.querySelector("base");if(e){const{pathname:t}=new URL(e.href);s=this._chopEndSlash(t)}}this.basePath=s||""}depart(){document.addEventListener("click",e=>{this._captureClick(e)},!0);const e=e=>{try{this.move(e)}catch(e){this._isStr(e)&&(window.location.href=this.basePath+e)}};window.onpopstate=t=>{e(t.state?t.state.path:"/")};let t=window.location.pathname.substr(this.basePath.length);t.length>1&&t.endsWith("/")&&(t=t.substr(0,t.length-1),window.history.replaceState(null,null,t)),e(t)}go(e){const t=window.history;t&&t.pushState&&(t.pushState({path:e},null,this.basePath+e),this.move(e))}_captureClick(e){const t=document.activeElement;if(t&&"A"===t.tagName&&"_top"!==t.target&&t.href.startsWith(window.location.origin+this.basePath)){e.preventDefault();try{this.go(t.pathname.substr(this.basePath.length))}catch(e){this._isStr(e)&&this.go(e)}}}}class w extends g{constructor(e,t,n="#!"){super(e,t),this.head=n}get curPath(){return window.location.hash.substr(this.head.length)}depart(){const e=e=>{try{this.move(e)}catch(e){this._isStr(e)&&(window.location.hash=this.head+e)}};window.onhashchange=t=>{e(this.curPath||"/")},e(this.curPath)}go(e){window.location.hash=this.head+e}}var y=new class{constructor(){}activate(e,t,n={}){this._rootArea=new e,this._curPage=null;const s=e=>{this._onMove(e)};this._router="HISTORY"===n.mode?new b(t,s,n.rootPath):new w(t,s,n.pathHead);const a=e=>{this._router.depart()};"loading"!==document.readyState?a():document.addEventListener("DOMContentLoaded",a,!1)}go(e,t){return this._preCtx=t,this._router.go(e),!1}back(){return window.history.back(),!1}_onMove({view:e,ctx:t}){this._preCtx&&(t=Object.assign(t||{},this._preCtx),this._preCtx=null),this._replaceContent(e,t),this._updateTitle()}_replaceContent(e,t){const n=this._curPage;n&&n.destroy();const s=Object.assign({},this._rootArea.context);this._curPage=new e({parent:this._rootArea,context:Object.assign(s,t)})}_updateTitle(){let e="";this._curPage&&(e=this._curPage.title()),document.title=this._rootArea.title(e)}};var _=class extends v{constructor(e,t={}){t._F_tmpl=e,super(t)}_privates(){const e=super._privates();return e._F_itemSet=new Map,e}itemViewClass(e){return this._F_tmpl}addItem(e){const t=this._createViewByItem(e);return this.addItemEl(this.contentEl,t.el),t}insertItem(e,t){const n=this._createViewByItem(e);return this.insertItemEl(this.contentEl,n.el,this._childElAt(t)),n}updateItem(e,t){const n=this._childElAt(t).getAttribute("_lfid_");this._F_itemSet.set(n,e),this.views[n].data=e}removeItem(e,t){const n=this._childElAt(t);this._removeItemByEl(n)}removeItemByView(e){this._removeItemByEl(e.el)}addItemEl(e,t){e.appendChild(t)}insertItemEl(e,t,n){e.insertBefore(t,n)}removeItemEl(e,t){e.removeChild(t)}_childElAt(e){return this.contentEl.children[e]}_createViewByItem(e){const t=`_F_${a.next().value}`,n=new(this.itemViewClass(e))({data:e});return this._F_itemSet.set(t,n),this.views[t]=n,n.el.setAttribute("_lfid_",t),n}_removeItemByEl(e){const t=e.getAttribute("_lfid_");this._F_itemSet.delete(t);const n=this.views;n[t].unload(),delete n[t],this.removeItemEl(this.contentEl,e)}_bindData(){const e=this._data;e instanceof c&&this._F_binders.push(new u(e,this))}_setDataToUI(){if(void 0!==this._data){for(let e of Object.values(this.views))this.removeItemByView(e);for(let e of this._data)this.addItem(e)}}};var E=class extends v{get data(){return this._assignFromFields(this._data)}set data(e){super.data=e}getValueOf(e){const t=this.findEl(e);if(t)return this._valueAsType(t);const n=this.views[e];return n?n.data:void 0}findEl(e){return this.el[e]||super.findEl(e)}_assignFromFields(e={}){const t=Object.assign({},e);for(let[e,n]of new FormData(this.el))t[e]=this._valueAsType(this.el[e]);for(let e of this.el.querySelectorAll("[data-id]")){const n=this._valueAsType(e);void 0!==n&&(t[e.dataset.id]=n)}return s(this.views,([e,n])=>{t[e]=n.data}),t}_valueAsType(e){const t=(e.dataset||{}).type||"text";let n=e.value;return"number"===t?n=Number(n):t.startsWith("bool")&&(n=Boolean(n)),n}_setFieldValue(e,t){const n=this.el[e];n?n.value=t:super._setFieldValue(e,t)}};var $=class{constructor(e,t){const n={token:e};t&&(n.rootURL=t+"/api/v3"),this.octo=new Octokat(n),this.loginUser=null,this.token=e,this.endpoint=t||null}activate(){return this.octo.me.fetch().then(e=>(this.loginUser=e,this.octo.user.orgs.fetch())).then(e=>({user:self.loginUser,orgs:e}))}fetchTarget(e,t){let n;return n=t?this.octo.repos(e,t):this.octo.orgs(e),n.fetch().then(e=>({user:this.loginUser,target:e}))}};var T={load:function(){let e={};try{const t=localStorage.getItem("defaults");t&&(e=JSON.parse(t))}catch(e){}return e},save:function(e,t){const n=this.load();void 0!==t?n[e]=t:e in n&&delete n[e],localStorage.setItem("defaults",JSON.stringify(n))}};let A;class I extends E{enable(){this.el.querySelectorAll("fieldset").forEach(e=>{e.disabled=!1})}disable(){this.el.querySelectorAll("fieldset").forEach(e=>{e.disabled=!0})}}class U extends I{html(){return'    <form>\n      <fieldset class="field" disabled="disabled">\n        <label>Your pullrequest states</label>\n        <button type="submit" class="button primary">Add pullrequest states</button>\n      </fieldset>\n    </form>'}handle(e){e.submit=(e,t)=>{const n={service:"github",width:"normal",notify:"off",kind:"my_pullreq_states",caption:"PullRequest states",token:A.token,endpoint:A.endpoint};this.fire("timelineAdded",n)}}}class k extends v{html(e){return`<option value="${e.value}">${e.caption}</option>`}}class R extends I{html(){return'    <form id="accountForm">\n      <div class="field">\n        <label for="githubToken">Access Token</label>\n        <input name="githubToken" type="text" class="full" placeholder="Access Token">\n        <p class="remarks">\n          <a href="https://github.com/settings/tokens" target="_blank">Create token for Deck</a>\n          （Please check <b>repo</b>, admin:org/<b>read:org</b>, <b>notifications</b> at <b>Select scopes</b>!）\n        </p>\n      </div>\n\n      <div class="field">\n        <label for="gheUrl">Root URL for GitHub Enterprize</label>\n        <input name="gheUrl" type="text" class="large" value="" placeholder="https://github.yourcompany.com">\n        <p class="remarks">Let it empty if you use github.com</p>\n      </div>\n\n      <button class="button primary" type="submit">Activate</button>\n    </form>'}handle(e){e.submit=(e,t)=>{const n=this.findEl("gheUrl");n.value=n.value.replace(/\/$/,"");const s={token:this.data.githubToken,gheUrl:this.data.gheUrl};A=new $(s.token,s.gheUrl),A.activate().then(e=>{const t=[{caption:"My Timeline",value:"my_timeline"}];e.orgs.items.forEach(e=>{t.push({caption:e.login,value:e.login})}),this.fire("fieldStateChanged",{enabled:!0,timelines:t})}).catch(e=>{this.fire("fieldStateChanged",{enabled:!1,timelines:[]}),alert("Failed to authenticate GitHub account by token")})}}}class S extends I{html(){return'    <form>\n      <fieldset class="field" disabled="disabled">\n        <label>Repository</label>\n        <input type="text" name="value" class="large" value="" placeholder="owner/repository">\n        <button type="submit" class="button primary">Add timeline</button>\n      </fieldset>\n    </form>'}handle(e){e.submit=(e,t)=>{var n=this.data.value.split("/"),s=n[0],a=n.length>1?n[1]:null;A.fetchTarget(s,a).then(e=>{this.register(this.data)}).catch(e=>{alert("Failed to access repository")})}}register(e){e.token=A.token,e.endpoint=A.endpoint,e.service="github",e.width="normal",e.caption=e.value;const t=e.value.split("/");1===t.length?(e.org=t[0],e.kind="org"):(e.owner=t[0],e.repo=t[1],e.kind="repo"),this.fire("timelineAdded",e)}}class O extends I{init(){return{selectList:new c}}html(){return'    <form>\n      <fieldset class="field" disabled="disabled">\n        <label>Your timelines</label>\n        <select data-id="selectList" name="value"></select>\n        <button type="submit" class="button primary">Add timeline</button>\n      </fieldset>\n    </form>'}load(e){e.selectList=new _(k)}handle(e){e.submit=(e,t)=>{const n=this.data;n.token=A.token,n.endpoint=A.endpoint,n.service="github",n.width="normal",n.notify="off","my_timeline"!==n.value?(n.kind="private",n.caption=n.value):(n.kind="my_timeline",n.caption="My Timeline"),this.fire("timelineAdded",n)}}setTimelines(e){this.data.selectList.reset(e)}}class N extends I{html(){return'    <form>\n      <fieldset class="field" disabled="disabled">\n        <label>Public Timeline</label>\n        <button type="submit" class="button primary">Add timeline</button>\n      </fieldset>\n    </form>'}handle(e){e.submit=(e,t)=>{const n={service:"github",width:"normal",notify:"off",kind:"public_timeline",caption:"Public Timeline",token:A.token,endpoint:A.endpoint};this.fire("timelineAdded",n)}}}var x=class extends f{html(){return'    <div class="setting page">\n      <h1>Add GitHub timeline</h1>\n\n      <section>\n        <h2>1. Account</h2>\n\n        <div data-id="accountForm"></div>\n      </section>\n\n      <section>\n        <h2>2. Notifications &amp; Timeline</h2>\n\n        <div data-id="notificationsForm"></div>\n        <div data-id="yourTimelineForm"></div>\n        <div data-id="repositoryForm"></div>\n        <div data-id="publicTimelineForm"></div>\n      </section>\n\n      <hr>\n\n      <div class="form-actions">\n        <button class="button" id="cancelButton">Cancel</button>\n      </div>\n    </div>'}load(e){const t=T.load().github||{};e.accountForm=new R({fields:"githubToken gheUrl",data:{githubToken:t.token||null,gheUrl:t.gheUrl||null}}),e.notificationsForm=new U,e.yourTimelineForm=new O,e.repositoryForm=new S,e.publicTimelineForm=new N}handle(e){e.cancelButton_click=function(){y.go("settings/timeline")},e.timelineAdded=(e,t)=>{const n=t.detail;T.save("github",{token:n.token,gheUrl:n.endpoint}),y.go("settings/timeline",{newTimeline:n})},e.fieldStateChanged=(e,t)=>{this.views.yourTimelineForm.setTimelines(t.detail.timelines),this.broadcast(t.detail.enabled?"enable":"disable")}}};var F=class{constructor(e,t){this.token=e,this.url=t}loadProjects(e){return(new r).get(`${this.url}/api/v2/projects`,{query:{apiKey:this.token}}).then(e=>{return e.body.filter(e=>!e.archived)})}fetch(e,t){let n={apiKey:this.token};return e.latestId&&(n.minId=e.latestId+1),e.count&&(n.count=e.count),(new r).get(`${this.url}${e.path}`,{query:n}).then(e=>{return e.body.filter(e=>!e.archived)})}};let L;class C extends E{html(){return'\n    <form id="accountForm">\n      <dl class="form">\n       <dt><label for="backlogUrl">API Root URL</label></dt>\n       <dd>\n        <input name="backlogUrl" type="text" class="large" value="" placeholder="https://<your>.backlog.jp">\n        <p class="remarks">ブラウザで見るURLと同等</p>\n       </dd>\n      </dl>\n\n      <dl class="form">\n       <dt><label for="backlogToken">API Token</label></dt>\n       <dd>\n        <input name="backlogToken" type="text" class="full" placeholder="">\n        <p class="remarks">個人設定 -> API 画面で発行したトークン</p>\n       </dd>\n      </dl>\n\n      <button type="submit" class="button primary">Load projects</button>\n    </form>'}handle(e){e.submit=()=>{const e=this.findEl("backlogUrl");e.value=e.value.replace(/\/$/,"");const{backlogToken:t,backlogUrl:n}=this.data;L=new F(t,n),L.loadProjects().then(e=>{const t=[{caption:"My Timeline",value:"space"}];e.forEach(e=>{t.push({caption:e.name,value:e.projectKey})}),this.projectForm.enable(t)}).catch(e=>{this.projectForm.disable(),alert("Failed to authenticate Backlog account by token")})}}}class q extends v{html(e){return`<option value="${e.value}">${e.caption}</option>`}}class j extends E{init(){return{selectList:new c}}html(){return'\n    <form id="projectForm">\n      <fieldset class="field" disabled="disabled">\n        <select data-id="selectList" name="value"></select>\n        <button type="submit" class="button primary">Add timeline</button>\n      </fieldset>\n    </form>'}load(e){e.selectList=new _(q)}handle(e){e.submit=()=>{const{value:e}=this.data,t={service:"backlog",width:"normal",notify:"off",token:L.token||null,endpoint:L.url||null};"my_timeline"!==e?(this.data.selectList.some(n=>(t.caption=n.caption,n.value===e)),t.kind="project",t.project=e):(t.kind="my_timeline",t.caption="My Timeline"),this.fire("timelineAdded",t)}}enable(e){this.el.querySelectorAll("fieldset").forEach(e=>{e.disabled=!1}),this.data.selectList.reset(e)}disable(){this.el.querySelectorAll("fieldset").forEach(e=>{e.disabled=!0}),this.data.selectList.reset()}}var P=class extends f{html(){return'    <div class="setting page">\n      <h1>Add Backlog timeline</h1>\n\n      <section>\n        <h2>1. Account</h2>\n\n        <div id="accountForm"></div>\n      </section>\n\n      <section>\n        <h2>2. Project</h2>\n\n        <div id="projectForm"></div>\n      </section>\n\n      <hr>\n\n      <div class="form-actions">\n        <button id="cancelButton" class="button">Cancel</button>\n      </div>\n    </div>'}load(e){const t=T.load().backlog||{};e.accountForm=new C({rootEl:"accountForm",data:{backlogToken:t.token||null,backlogUrl:t.url||null}}),e.accountForm.projectForm=e.projectForm=new j({rootEl:"projectForm"})}handle(e){e.cancelButton_click=()=>{y.go("settings/timeline")},e.timelineAdded=(e,t)=>{const n=t.detail;T.save("backlog",{token:n.token,url:n.endpoint}),y.go("settings/timeline",{newTimeline:n})}}};class H extends v{html(e){const t=e.caption.split("/").join("/<wbr>");return`    <div class="column">\n      <span data-id="removeButton" class="remove mega-octicon octicon-x"></span>\n      <div class="service">${e.service}</div>\n      <div class="project" data-id="project">${t}</div>\n\n      <div class="field">\n        <label>width</label>\n        <select data-id="widthSelect" class="select-sm widthSelect" value="${e.width}">\n          <option value="normal">normal</option>\n          <option value="narrow">narrow</option>\n          <option value="wide">wide</option>\n        </select>\n      </div>\n\n      <div class="field">\n        <label>notify</label>\n        <select data-id="notifySelect" class="select-sm notifySelect" value="${e.notify||"off"}">\n          <option value="off">Off</option>\n          <option value="mentioned">Mentioned</option>\n          <option value="all">On</option>\n        </select>\n      </div>\n\n      <div class="control clearfix">\n        <span data-id="leftButton" class="left moveLeft mega-octicon octicon-arrow-left"></span>\n        <span data-id="rightButton" class="right moveRight mega-octicon octicon-arrow-right"></span>\n      </div>\n    </div>`}handle(e){e.removeButton_click=()=>{this.el.classList.add("fadeOut"),setTimeout(()=>{this.fire("delete",{item:this.data})},400)},e.leftButton_click=()=>{this.fire("move",{pos:-1,item:this.data})},e.rightButton_click=()=>{this.fire("move",{pos:1,item:this.data})},e.widthSelect_change=(e,t)=>{this.data.width=e.value},e.notifySelect_change=(e,t)=>{this.data.notify=e.value}}}class B extends _{constructor(e){super(H,e)}html(){return'<div id="showcase"></div>'}handle(e){e.move=(e,t)=>{const{item:n,pos:s}=t.detail,a=this.data.indexOf(n),i=a+s;-1!==i&&i!==this.data.length&&(this.data.remove(a),this.data.add(n,i))},e.delete=(e,t)=>{this.data.remove(t.detail.item)}}}var D=new class extends i{constructor(){super(),this.listened("notify",this.notified),this.listened("clear",this.cleared)}notified(e){if(!this.hasNewArrival&&e.notify){this.hasNewArrival=!0,document.querySelector("#favicon").href="img/favicon-new.ico";const e=t=>{this.say("clear"),document.body.removeEventListener("click",e,!1)};document.body.addEventListener("click",e)}if("notify"in e&&"off"!==e.notify&&"Notification"in window&&"granted"===Notification.permission){let t;if(e.mentions)t=`Your are mentioned ${e.message}`;else{if("mentioned"===e.notify)return;t=e.message}const n=new Notification(e.title,{body:t,icon:"img/apple-touch-icon-180x180.png"});n.onclick=function(){window.focus()},setTimeout(()=>n.close(),6e3)}}cleared(e){document.querySelector("#favicon").href="img/favicon-default.ico",this.hasNewArrival=!1}};class M extends v{init(e){return{eventList:new c,...e}}load(e){e.eventList=new _(this.itemViewClass)}handle(e){e.timelineHeader_click=(e,t)=>{if("SPAN"===t.target.tagName)return!0;this.fire("clickedTimelineHeader",this.data)},e.clickedTimelineHeader=(e,t)=>{const n=this.findEl("timelineBody"),s=-n.scrollTop/10,a=setInterval(()=>{0!=n.scrollTop?n.scrollBy(0,s):clearInterval(a)},30)}}unload(){this.model.stopAutoLoad()}destroyed(){return!this.el.parentNode}refreshed({items:e,notify:t}){this.data.eventList.reset(e),t&&D.say("notify",Object.assign({notify:this.model.notify},t))}newArrived({newItems:e,notify:t}){this.destroyed()||(t&&D.say("notify",Object.assign({notify:this.model.notify},t)),e.reverse().forEach(e=>{e.newArrival=!0,this.data.eventList.add(e,0)}),this.findEl("timelineHeader").classList.add("newArrival"))}}var G=class extends i{constructor(e,t){super(),this.client=new F(e,t),this.rootUrl=t,this.latestId=0}activate(e){this.tlinfo=e,this.interval=6e4;let t=e.project;return this.fetchPath="/api/v2/"+("space"==t?"space":"projects/"+t)+"/activities",this.webUrl=this.rootUrl+("space"==t?"/dashboard":"/projects/"+t),this.client.fetch({path:this.fetchPath,count:40}).then(t=>{this.latestId=t.length>0?parseInt(t[0].id,10):0;const n={name:e.caption,url:this.webUrl,eventList:t,notify:e.notify||"off"};return setTimeout(()=>{this.loadNew()},this.interval),{model:this,data:n,name:n.name,notify:n.notify||"off"}})}loadNew(){if(0===this.interval)return!1;this.client.fetch({path:this.fetchPath,minId:this.latestId+1}).then(e=>{let t,n=0;for(let s=0,a=e.length;s<a&&(t=parseInt(e[s].id,10),!(t<=this.latestId));s++)n++;if(this.interval>0&&setTimeout(()=>this.loadNew(),this.interval),0===n)return;this.latestId=e.length>0?parseInt(e[0].id,10):0;const s=e.slice(0,n),a={notify:this.tlinfo.notify||"off",title:"Backlog "+this.tlinfo.caption,message:n+" new event(s)"};this.say("newArrived",{newItems:s,notify:a})})}stopAutoLoad(){this.interval=0}},V=function(e){let t=(new Date).getTime(),n=new Date(e),s=n.getHours(),a=n.getMinutes();return s<10&&(s=" "+s),a<10&&(a="0"+a),t-n.getTime()<432e5?s+":"+a:n.getMonth()+1+"."+n.getDate()+" "+s+":"+a};class W extends v{html(e){return`    <p class="issueChange">\n      <span class="changeField">${e.field}</span>\n      <span class="changeOld">${e.oldValue}</span>\n      <span class="changeMark">${e.mark}</span>\n      <span class="changeNew">${e.newValue}</span>\n    </p>`}}class Y extends v{html(e){return`    <p class="issueAttachment">\n      <span class="changeNew">${e.name}</span><br>\n      <img src="${e.imageUrl}" alt="${e.name}">\n    </p>`}}class J extends v{html(e){const{desc:t,diff:n}=e,s=marked(n?n.newValue:t||"");return`    <div class="backlogEvent">\n      <header>\n        <a class="eventRepo" href="${e.projectUrl}">${e.project.name}</a>\n        <span class="eventTime"><time>${e.createdAt}</time></span>\n      </header>\n\n      <div class="eventInfo">\n        <span class="actor">${e.actor.name}</span> &nbsp;\n        <span class="action updateIssue">${e.action}</span>\n      </div>\n      <div class="issue">\n        <a href="${e.url}">${e.projectKeyId}</a>\n        <span>${e.summary}</span>\n      </div>\n\n      <div data-id="changes" class="issueChanges"></div>\n\n      <div class="commentBody quote">${s}</div>\n\n      <div data-id="attachments" class="issueAttachments"></div>\n    </div>`}load(e){e.changes=new _(W),e.attachments=new _(Y)}}class K extends v{html(e){const t=marked(e.diff||"");return`    <div class="backlogWikiEvent backlogEvent ghEvent">\n      <header>\n        <a class="repo" href="${e.projectUrl}">${e.project.name}</a>\n        <span class="eventTime"><time>${e.createdAt}</time></span>\n      </header>\n\n      <div class="eventInfo">\n        <span class="actor">${e.actor.name}</span> &nbsp;\n        <span class="action wiki">${e.action}</span>\n      </div>\n\n      <div class="issue">\n        <span>${e.file}</span>\n      </div>\n\n      <div class="commentBody quote">${t}</div>\n    </div>`}}class z extends v{html(e){return`    <p class="pushCommit">\n      <a href="${e.commitUrl}"><code>${e.sha}</code></a>\n      <span>${e.message}</span>\n    </p>`}}class X extends v{html(e){return`    <div class="BacklogGitPushEvent backlogEvent ghEvent">\n      <header>\n        <a class="repo" href="${e.projectUrl}">${e.project.name}</a>\n        <span class="eventTime"><time>${e.createdAt}</time></span>\n      </header>\n\n      <div class="eventInfo">\n        <span class="actor">${e.actor.name}</span> &nbsp;\n        <span class="action gitPushed">${e.action}</span>\n      </div>\n\n      <div class="issue">\n        <a href="${e.repoUrl}">${e.repoName}</a>　の\n        <a class="branch-ref" href="${e.branchUrl}">${e.branch}</a>\n      </div>\n\n      <div data-id="commits"></div>\n    </div>`}load(e){e.commits=new _(z)}}class Q extends v{html(e){return`    <div class="backlogFileEvent backlogEvent ghEvent">\n      <header>\n        <a class="repo" href="${e.projectUrl}">${e.project.name}</a>\n        <span class="eventTime"><time>${e.createdAt}</time></span>\n      </header>\n\n      <div class="eventInfo">\n        <span class="actor">${e.actor.name}</span> &nbsp;\n        <span class="action updateIssue">${e.action}</span>\n      </div>\n\n      <div class="issue">\n        <span>${e.file}</span>\n      </div>\n    </div>`}}class Z extends v{html(e){return`    <div class="backlogJoinEvent backlogEvent ghEvent">\n      <header>\n        <a class="repo" href="${e.projectUrl}">${e.project.name}</a>\n        <span class="eventTime"><time>${e.createdAt}</time></span>\n      </header>\n\n      <div class="eventInfo">\n        <span class="actor">${e.actor.name}</span> &nbsp;\n        <span class="action projectUser">${e.action}</span>\n      </div>\n\n      <div class="joinProject">\n       <p>${e.users} がメンバー${e.move}</p>\n      </div>\n    </div>`}}var ee=class{constructor(e){this.rootUrl=e}Wiki(e){let t={projectUrl:this.rootUrl+"/projects/"+e.project.projectKey,action:this.typeCaption[e.type],createdAt:V(e.created),actor:e.createdUser,project:e.project,file:e.content.name,diff:e.content.diff||e.content.content};return new K({data:t})}File(e){let t={projectUrl:this.rootUrl+"/projects/"+e.project.projectKey,action:this.typeCaption[e.type],createdAt:V(e.created),actor:e.createdUser,project:e.project,file:e.content.dir+e.content.name};return new Q({data:t})}Join(e){let t={projectUrl:this.rootUrl+"/projects/"+e.project.projectKey,action:this.typeCaption[e.type],createdAt:V(e.created),actor:e.createdUser,project:e.project,move:15==e.type?"に加わりました。":"から外れました。",users:e.content.users.map(e=>e.name).join(", ")};return new Z({data:t})}GitPush(e){let t={projectUrl:this.rootUrl+"/projects/"+e.project.projectKey,action:this.typeCaption[e.type],createdAt:V(e.created),actor:e.createdUser,project:e.project,projectKey:e.project.projectKey,repoName:e.content.repository.name},n=this.rootUrl+"/git/"+t.projectKey+"/"+t.repoName;return t.repoUrl=n,t.branch=e.content.ref.replace(/^refs\/heads\//,""),t.branchUrl=n+"/tree/"+t.branch,t.commits=function(e,t){return t.map(t=>({sha:t.rev.substr(0,6),commitUrl:e+"/commit/"+t.rev,message:t.comment}))}(n,e.content.revisions),new X({data:t})}Event(e){let t={projectUrl:this.rootUrl+"/projects/"+e.project.projectKey,action:this.typeCaption[e.type],createdAt:V(e.created),actor:e.createdUser,project:e.project,projectKeyId:e.project.projectKey+"-"+e.content.key_id,summary:e.content.summary,desc:e.content.description};return this.analyzeChanges(t,e.content.changes),e.content.attachments&&(t.attachments=this.convertAttachments(this.rootUrl,e.content.attachments)),t.url=this.rootUrl+"/view/"+t.projectKeyId,e.content.comment&&(t.desc=e.content.comment.content),new J({data:t})}get typeCaption(){return[null,"課題の追加","課題の更新","課題にコメント","課題の削除","Wikiを追加","Wikiを更新","Wikiを削除","共有ファイルを追加","共有ファイルを更新","共有ファイルを削除","Subversionコミット","GITプッシュ","GITリポジトリ作成","課題をまとめて更新","プロジェクトに参加","プロジェクトから脱退","コメントにお知らせを追加","プルリクエストの追加","プルリクエストの更新","プルリクエストにコメント"]}get statuses(){return[null,"未対応","処理中","処理済み","完了"]}get resolutions(){return["対応済み","対応しない","無効","重複"]}get priorities(){return[null,null,"高","中","低"]}convertChange(e){let t;return"status"==e.field?t={field:"状態",newValue:this.statuses[parseInt(e.new_value)],mark:"→",oldValue:this.statuses[parseInt(e.old_value)]}:"resolution"==e.field?t={field:"完了理由",newValue:this.resolutions[parseInt(e.new_value)],mark:"→",oldValue:this.resolutions[parseInt(e.old_value)]}:"priority"==e.field?t={field:"優先度",newValue:this.priorities[parseInt(e.new_value)],mark:"→",oldValue:this.priorities[parseInt(e.old_value)]}:"attachment"==e.field?t={field:"添付ファイル",newValue:e.new_value,mark:"",oldValue:e.old_value}:"assigner"==e.field?t={field:"担当",oldValue:e.old_value,mark:"→",newValue:e.new_value}:"description"==e.field?t={field:"diff",oldValue:e.old_value,mark:"→",newValue:e.new_value}:"limitDate"==e.field?t={field:"期限日",oldValue:e.old_value,mark:"→",newValue:e.new_value}:"issueType"==e.field?t={field:"種別",oldValue:e.old_value,mark:"→",newValue:e.new_value}:"parentIssue"==e.field&&(t={field:"親課題",oldValue:e.old_value,mark:"→",newValue:e.new_value}),t?t.oldValue||(t.mark=""):t={},t}analyzeChanges(e,t){t&&(e.changes=[],t.forEach(t=>{let n=this.convertChange(t);"diff"==n.field?e.diff=n:e.changes.push(n)}))}convertAttachments(e,t){let n=[];return t.forEach(t=>{try{let s=t.name,a=s.substr(s.lastIndexOf(".")+1).toLowerCase();"png"!=a&&"jpg"!=a&&"gif"!=a||n.push({imageUrl:e+"/ViewAttachmentImage.action?attachmentId="+t.id,id:t.id,name:s,size:t.size})}catch(e){}}),n}createView(e){switch(e.type){case 5:case 6:case 7:return this.Wiki(e);case 12:return this.GitPush(e);case 8:case 9:case 10:case 11:case 13:return this.File(e);case 15:case 16:return this.Join(e);default:return this.Event(e)}}};class te extends v{html(){return'<div class="backlogItem"></div>'}load(e){const{viewFactory:t,...n}=this.data,s=t.createView(n);s&&(this.add("item",s),this.data.newArrival&&this.el.classList.add("newArrival"))}}var ne=class extends M{get itemViewClass(){return te}html(e){return`    <div class="timeline backlog">\n      <header class="timelineHeader" data-id="timelineHeader">\n        <a data-id="serviceLink" target="_blank">\n          <span class="service">Backlog</span>\n          <span class="project">${e.caption}</span>\n        </a>\n      </header>\n      <div class="timelineBody" data-id="eventList"></div>\n    </div>`}completed(){let{token:e,endpoint:t,...n}=this.data;this.model=new G(e,t),this.model.activate(n).then(({data:e,model:t})=>{this.findEl("serviceLink").href=e.url;const n=new ee(t.rootUrl);this.data.eventList._F_itemClass=class extends l{get viewFactory(){return n}},this.data.eventList.reset(e.eventList)}).catch(e=>{alert("Can't fetch Backlog information")}),this.model.listened("refresh",e=>this.refreshed(e)),this.model.listened("newArrived",e=>this.newArrived(e))}};var se=class extends i{constructor(e,t){super();const n={token:e};t&&(n.rootURL=t+"/api/v3"),this.octo=new Octokat(n),this.loginUser=null,this.fetcher=null,this.latestId=0,this.isPublic=!e,this.webUrl=t||"https://github.com",this.v4client=graphql("https://api.github.com/graphql",{headers:{Authorization:`Bearer ${e}`},asJSON:!0})}async activate(e){this.tlinfo=e,this.name=e.caption,this.interval=6e4,this.notify=e.notify||"off";const t=await this.getLoginUser();"my_pullreq_states"===e.kind?(e.value=t.login,this.setupMyNotifications()):this.setupEvents(t)}async getLoginUser(){return this.isPublic?null:(this.loginUser=await this.octo.me.fetch(),this.loginUser)}setupMyNotifications(){this.url="https://github.com/notifications",this.type="notification",this.loadNotifications()}setupEvents(e){const t=this.tlinfo;"my_timeline"==t.kind?(this.fetcher=this.octo.users(e.login).receivedEvents,t.value=e.login,this.url=`https://github.com/${e.login}`):"org"==t.kind?(this.fetcher=this.octo.orgs(t.org).events,this.url=`https://github.com/${t.org}`):"repo"==t.kind?(this.fetcher=this.octo.repos(t.owner,t.repo).events,this.url=`https://github.com/${t.owner}/${t.repo}`):"private"==t.kind?(this.fetcher=this.octo.users(e.login).events.orgs(t.value),this.url=`https://github.com/${t.value}`):"public_timeline"==t.kind&&(this.fetcher=this.octo.events,t.value="Public",this.url="https://github.com/"),this.type="event",this.loadFirstEvents()}async loadNotifications(){const e=new Date((new Date).getTime()-2592e6).toISOString(),{items:t}=await this.octo.notifications.fetch({since:e}),n=[];t.forEach(({subject:e})=>{const{type:t,url:s}=e;if("PullRequest"===t){const[e,t,a,i]=s.match(/\/([^\/]+)\/([^\/]+)\/pulls\/(\d+)$/);n.push(this.fetchPullReqDetail(t,a,Number(i)))}});let s=await Promise.all(n);s=s.reduce((e,t)=>e.concat(t),[]),s=s.filter(e=>"MERGED"!==e.state),s=s.sort((e,t)=>e.updatedAt<t.updatedAt?1:e.updatedAt>t.updatedAt?-1:0);const a=s.length?new Date(s[0].updatedAt).getTime():0;let i=null;this.latestId&&this.latestId<a&&(i={title:`GitHub ${this.name}`,message:"New states for PullRequests"}),this.latestId=a,this.say("refresh",{items:s,notify:i}),this.interval&&setTimeout(async()=>{await this.loadNotifications()},this.interval)}async loadFirstEvents(){const{items:e}=await this.fetcher.fetch({per_page:60});this.latestId=e.length>0?parseInt(e[0].id,10):0,this.applyMention(e),this.say("refresh",{items:e,notify:null}),this.interval&&setTimeout(async()=>{await this.loadNewEvents()},this.interval)}async loadNewEvents(){if(!this.interval)return;const{items:e}=await this.fetcher.fetch();let t,n=0;for(let s=0,a=e.length;s<a&&(t=parseInt(e[s].id,10),!(t<=this.latestId));s++)n++;n>0&&(this.latestId=e.length>0?parseInt(e[0].id,10):0,this.notifyNewArrived(e.slice(0,n))),setTimeout(()=>this.loadNewEvents(),this.interval)}stopAutoLoad(){this.interval=0}notifyNewArrived(e){const t=this.applyMention(e),n={title:`GitHub ${this.name}`,message:`${e.length} new event(s)`,mentions:t};this.say("newArrived",{newItems:e,notify:n})}applyMention(e){if(!this.loginUser)return;const t=["issue","comment","pullRequest","review"];let n=0,s="@"+this.loginUser.login;return e.forEach(e=>{let a=e.payload;if(a.body&&a.body.indexOf(s)>-1)return e.mention=!0,void n++;t.some(t=>{if(a[t]&&a[t].body&&a[t].body.indexOf(s)>-1)return e.mention=!0,n++,!0})}),n}async fetchPullReqDetail(e,t,n){const s=(await this.v4client("query ($owner: String!, $repoName: String!, $number: Int!) {\n      repository(owner: $owner, name: $repoName) {\n        pullRequest(number: $number) {\n          number\n          title\n          url\n          author {\n            login\n            avatarUrl\n          }\n          baseRefName\n          headRefName\n          headRepository {\n            nameWithOwner\n          }\n          bodyHTML\n          state\n          mergeable\n          databaseId\n          updatedAt\n          reviewRequests(first: 10) {\n            edges {\n              node {\n                requestedReviewer {\n                  ... on User {\n                    login\n                    avatarUrl\n                  }\n                }\n              }\n            }\n          }\n          reviews(last: 5, states: [APPROVED, CHANGES_REQUESTED, DISMISSED, PENDING]) {\n            edges {\n              node {\n                author {\n                  login\n                  avatarUrl\n                }\n                resourcePath\n                bodyHTML\n                submittedAt\n                updatedAt\n                state\n              }\n            }\n          }\n        }\n      }\n    }",{owner:e,repoName:t,number:n})).repository.pullRequest;if(s.reviewRequests.edges.length)for(let e of s.reviewRequests.edges)if(e.node.requestedReviewer.login===this.loginUser.login)return s.kind="requested_review",s;let a={};if(s.reviews.edges.length)for(let e of s.reviews.edges){const t=e.node.author.login;t!==this.loginUser.login&&(s.kind="reviewed",a[t]=e.node)}return Object.values(a).map(e=>{const t=Object.assign({review:e},s);return t.updatedAt=e.updatedAt,t})}};class ae extends v{html(e){const t=_e(e.comment.body||"");return`    <div class="commitCommentEvent ghEvent">\n      <header>\n        <a class="repo" href="${e.rootUrl}/${e.repo.name}">${e.repo.name}</a>\n        <a class="eventTime" href="${e.comment.htmlUrl}"><time>${e.comment.createdAt}</time></a>\n      </header>\n      <div class="eventInfo">\n        <a class="actor" href="${e.comment.user.htmlUrl}">\n          <img class="avatar avatar-small" src="${e.comment.user.avatarUrl}">\n          <span>${e.comment.user.login}</span>\n        </a>\n        <span class="action"><span class="octicon octicon-comment"></span></span>\n        <span class="word" style="margin-left:.8ex">on</span>\n        <span class="repoTarget">\n          <span class="octicon octicon-git-commit"></span>\n          <a href="${e.comment.htmlUrl}">\n            <code>${e.sha}</code>\n            <span class="filePath">${e.comment.path}</span>\n          </a>\n        </span>\n      </div>\n      <div class="commentBody quote">${t}</div>\n    </div>`}}class ie extends v{html(e){let t=null,n="";return"opened"===e.action&&(t=_e(e.body||""),e.mention&&(n="mentioned")),`    <div class="issueEvent ghEvent">\n      <header>\n        <a class="repo" href="${e.rootUrl}/${e.repo.name}">${e.repo.name}</a>\n        <a class="eventTime" href="${e.htmlUrl}"><time>${e.createdAt}</time></a>\n      </header>\n      <div class="eventInfo">\n        <a class="actor" href="${e.rootUrl}/${e.actor.login}">\n          <img class="avatar avatar-small" src="${e.actor.avatarUrl}">\n          <span>${e.actor.login}</span>\n        </a>\n        <p class="eventTitle">\n          <span class="octicon octicon-${e.octicon} ${e.action}"></span>\n          <a class="issueTitle" href="${e.htmlUrl}">#${e.number} ${e.title}</a>\n        </p>\n      </div>`+(t?`<div class="issueBody quote ${n}">${t}</div>`:"")+"</div>"}}class oe extends v{html(e){let t="",n="",s="",a="";if(e.comment.body)e.issue.body&&(t=_e(e.issue.body),e.mention&&(s="mentioned")),n=_e(e.comment.body||""),e.mention&&(a="mentioned");else if(null!=e.issue.labels){const n=e.issue.labels[0];t=`<span style="background-color:#${n.color}">${n.name}</span>`}return`    <div class="issueEvent ghEvent">\n      <header>\n        <a class="repo" href="${e.rootUrl}/${e.repo.name}">${e.repo.name}</a>\n        <a class="eventTime" href="${e.comment.htmlUrl}"><time>${e.comment.createdAt}</time></a>\n      </header>\n      <div class="eventInfo">\n        <a class="actor" href="${e.comment.user.htmlUrl}">\n          <img class="avatar avatar-small" src="${e.comment.user.avatarUrl}">\n          <span>${e.comment.user.login}</span>\n        </a>\n        <span class="action"><span class="octicon octicon-comment-discussion"></span></span>\n      </div>\n      <div class="sub">\n        <p class="eventTitle">\n          <span class="octicon octicon-${e.octicon}"></span>\n          <a class="issueTitle" href="${e.issue.htmlUrl}">#${e.issue.number} ${e.issue.title}</a>\n        </p>\n        <div data-id="issueBody" class="issueBody quote ${s}">${t}</div>\n      </div>\n      <div class="commentBody quote ${a}">${n}</div>\n    </div>`}handle(e){e.issueBody_click=(e,t)=>{e.classList.toggle("full")}}}class re extends v{html(e){let t=null,n="";return"closed"!==e.action&&e.pullRequest.body&&(t=_e(e.pullRequest.body||""),e.mention&&(n="mentioned")),`    <div class="pullReqEvent ghEvent">\n      <header>\n        <a class="repo" href="${e.rootUrl}/${e.repo.name}">${e.repo.name}</a>\n        <a class="eventTime" href="${e.pullRequest.htmlUrl}"><time>${e.createdAt}</time></a>\n      </header>\n      <div class="eventInfo">\n        <a class="actor" href="${e.rootUrl}/${e.actor.login}">\n          <img class="avatar avatar-small" src="${e.actor.avatarUrl}">\n          <span>${e.actor.login}</span>\n        </a>\n        <span class="mergeTarget">\n          <a class="branch-ref" href="${e.pullRequest.head.repo.htmlUrl}/tree/${e.pullRequest.head.ref}">${e.pullRequest.head.ref}</a>\n          <span class="octicon octicon-arrow-small-right"></span>\n          <a class="branch-ref" href="${e.pullRequest.base.repo.htmlUrl}/tree/${e.pullRequest.base.ref}">${e.pullRequest.base.ref}</a>\n        </span>\n        <p class="eventTitle">\n          <span class="action ${e.action}"><span class="octicon octicon-${e.octicon}"></span></span>\n          <a class="issueTitle" href="${e.pullRequest.htmlUrl}">#${e.number} ${e.pullRequest.title}</a>\n        </p>\n      </div>`+(t?`<div class="pullReqBody quote ${n}">${t}</div>`:"")+"</div>"}}class le extends v{html(e){let t="",n="",s="";if(e.review.body&&(e.pullRequest.body&&(t=_e(e.pullRequest.body)),n=_e(e.review.body||""),e.mention&&(s="mentioned")),e.state.match(/^approved$/i)){const n=e.issue.labels[0];t='<span style="background-color:#'+n.color+'">'+n.name+"</span>"}return`    <div class="issueEvent ghEvent">\n      <header>\n        <a class="repo" href="${e.rootUrl}/${e.repo.name}">${e.repo.name}</a>\n        <a class="eventTime" href="${e.review.htmlUrl}"><time>${e.review.submittedAt}</time></a>\n      </header>\n      <div class="eventInfo">\n        <a class="actor" href="${e.comment.user.htmlUrl}">\n          <img class="avatar avatar-small" src="${e.comment.user.avatarUrl}">\n          <span>${e.comment.user.login}</span>\n        </a>\n        <span class="action"><span class="octicon octicon-comment-discussion"></span></span>\n      </div>\n      <div class="sub">\n        <p class="eventTitle">\n          <span class="octicon octicon-${e.octicon}"></span>\n          <a class="issueTitle" href="${e.pullRequest.htmlUrl}">#${e.number} ${e.pullRequest.title}</a>\n        </p>\n        <div data-id="issueBody" class="issueBody quote">${t}</div>\n      </div>\n      <div class="commentBody quote ${s}">${n}</div>\n    </div>`}handle(e){e.issueBody_click=(e,t)=>{e.classList.toggle("full")}}}class ce extends v{html(e){const t=function(e){for(var t=e.split("\n"),n=['<p class="head">'+t[0]+"</p>"],s=1,a=t.length;s<a;s++){var i=t[s].charAt(0);"+"===i?n.push('<p class="plus">'+t[s]+"</p>"):"-"===i?n.push('<p class="minus">'+t[s]+"</p>"):n.push('<p class="normal">'+t[s]+"</p>")}return n.join("")}(e.comment.diffHunk),n=_e(e.comment.body||""),s=e.mention?"mentioned":"";return`    <div class="issueEvent ghEvent">\n      <header>\n        <a class="repo" href="${e.rootUrl}/${e.repo.name}">${e.repo.name}</a>\n        <a class="eventTime" href="${e.comment.htmlUrl}"><time>${e.comment.createdAt}</time></a>\n      </header>\n      <div class="eventInfo">\n        <a class="actor" href="${e.comment.user.htmlUrl}">\n          <img class="avatar avatar-small" src="${e.comment.user.avatarUrl}">\n          <span>${e.comment.user.login}</span>\n        </a>\n        <span class="action"><span class="octicon octicon-comment"></span></span>\n      </div>\n      <div class="sub">\n        <p class="eventTitle">\n          <span class="octicon octicon-git-pull-request"></span>\n          <a class="issueTitle" href="${e.pullRequest.htmlUrl}">#${e.pullRequest.number} ${e.pullRequest.title}</a>\n        </p>\n        <div class="diff quote">\n          <p class="filePath"><a href="${e.comment.htmlUrl}">${e.comment.path}</a></p>\n          <div class="diffBody">${t}</div>\n        </div>\n      </div>\n      <div class="commentBody quote ${s}">${n}</div>\n    </div>`}}class de extends v{html(e){return`    <p class="pushCommit">\n      <a href="${e.commitUrl}"><code>${e.sha}</code></a>\n      <span data-id="msgBody" class="msg">${e.message}</span>\n    </p>`}handle(e){e.msgBody_click=function(e,t){e.classList.toggle("expanded")}}}class he extends v{html(e){return`    <div class="pushEvent ghEvent">\n      <header>\n        <a class="repo" href="${e.rootUrl}/${e.repo.name}">${e.repo.name}</a>\n        <a class="eventTime" href="${e.htmlUrl}"><time>${e.createdAt}</time></a>\n      </header>\n\n      <div class="eventInfo">\n        <a class="actor" href="${e.rootUrl}/${e.actor.login}">\n          <img class="avatar avatar-small" src="${e.actor.avatarUrl}">\n          <span>${e.actor.login}</span>\n        </a>\n        <span class="action push">\n          <span class="word">pushed</span>\n          <span class="octicon octicon-repo-push"></span>\n        </span>\n        <span class="repoTarget">\n          <a class="branch-ref" href="${e.rootUrl}/${e.repo.name}/tree/${e.branch}">${e.branch}\n          </a>\n        </span>\n      </div>\n\n      <div data-id="commits" class="pushCommits"></div>\n    </div>`}load(e){e.commits=new _(de)}}class ue extends v{html(e){return`    <span>\n      <span class="word">${e.action}</span>\n      <span class="action wiki"><span class="octicon octicon-${e.octicon}"></span></span>\n      <a class="repoTarget" href="${e.htmlUrl}">${e.title}</a>\n    </span>`}}class pe extends v{html(e){return`    <div class="gollumEvent ghEvent">\n      <header>\n        <a class="repo" href="${e.rootUrl}/${e.repo.name}">${e.repo.name}</a>\n        <span class="eventTime"><time>${e.createdAt}</time></span>\n      </header>\n      <div class="eventInfo">\n        <a class="actor" href="${e.actor.url}">\n          <img class="avatar avatar-small" src="${e.actor.avatarUrl}">\n          <span>${e.actor.login}</span>\n        </a>\n        <span data-id="pages" class="gollumPageUpdates"></span>\n      </div>\n    </div>`}load(e){e.pages=new _(ue)}}class me extends v{html(e){return`    <div class="createEvent ghEvent">\n      <time class="eventTime">${e.createdAt}</time>\n      <div class="eventInfo">\n        <a class="actor" href="${e.rootUrl}/${e.actor.login}">\n         <img class="avatar avatar-small" src="${e.actor.avatarUrl}">\n         <span>${e.actor.login}</span>\n        </a>\n        <span class="word">created</span>\n        <span class="repoTarget">\n          <span class="octicon octicon-${e.octicon}"></span>\n          <a class="repo" href="${e.rootUrl}/${e.repo.name}">${e.repo.name}</a>\n        </span>\n      </div>\n    </div>`}}class ve extends v{html(e){return`    <div class="forkEvent ghEvent">\n      <time class="eventTime">${e.createdAt}</time>\n      <div class="eventInfo">\n        <a class="actor" href="${e.rootUrl}/${e.actor.login}">\n          <img class="avatar avatar-small" src="${e.actor.avatarUrl}">\n          <span>${e.actor.login}</span>\n        </a>\n        <span class="word">forked</span>\n        <a href="${e.forkee.htmlUrl}" class="action fork"><span class="octicon octicon-repo-forked"></span></a>\n        <span class="repoTarget">\n          <a class="repo" href="${e.rootUrl}/${e.repo.name}">${e.repo.name}</a>\n        </span>\n      </div>\n    </div>`}}class fe extends v{html(e){return`    <div class="memberEvent ghEvent">\n      <time class="eventTime">${e.createdAt}</time>\n      <div class="eventInfo">\n        <a class="actor" href="${e.rootUrl}/${e.actor.login}">\n          <img class="avatar avatar-small" src="${e.actor.avatarUrl}">\n          <span>${e.actor.login}</span>\n        </a>\n        <span class="word">${e.action}</span>\n        <a class="actor" href="${e.rootUrl}/${e.member.login}">\n          <img class="avatar avatar-small" src="${e.member.avatarUrl}">\n          <span>${e.member.login}</span>\n        </a>\n        <span class="octicon octicon-arrow-small-right"></span>\n        <span class="repoTarget">\n          <a class="repo" href="${e.rootUrl}/${e.repo.name}">${e.repo.name}</a>\n        </span>\n      </div>\n    </div>`}}class ge extends v{html(e){return`    <div class="publicEvent ghEvent">\n      <time class="eventTime">${e.createdAt}</time>\n      <div class="eventInfo">\n        <a class="actor" href="${e.rootUrl}/${e.actor.login}">\n          <img class="avatar avatar-small" src="${e.actor.avatarUrl}">\n          <span>${e.actor.login}</span>\n        </a>\n        <span class="word">made</span>\n        <span class="repoTarget">\n          <a class="repo" href="${e.rootUrl}/${e.repo.name}">${e.repo.name}</a>\n        </span>\n        <span class="word">public</span>\n      </div>\n    </div>`}}class be extends v{html(e){return`    <div class="releaseEvent ghEvent">\n      <header>\n        <a class="repo" href="${e.rootUrl}/${e.repo.name}">${e.repo.name}</a>\n        <a class="eventTime" href="${e.htmlUrl}"><time>${e.createdAt}</time></a>\n      </header>\n\n      <div class="eventInfo">\n        <a class="actor" href="${e.author.htmlUrl}">\n          <img class="avatar avatar-small" src="${e.author.avatarUrl}">\n          <span>${e.author.login}</span>\n        </a>\n        <span class="word">released</span>\n        <span class="repoTarget">\n          <a href="${e.htmlUrl}"><span class="octicon octicon-tag"></span> ${e.tagName}</a>\n        </span>\n        <span class="repoTarget">\n          <span class="word">on</span>\n          <span class="branch-ref">${e.targetCommitish}</span>\n        </span>\n      </div>\n    </div>`}}class we extends v{html(e){return`    <div class="watchEvent ghEvent">\n      <time class="eventTime">${e.createdAt}</time>\n      <div class="eventInfo">\n        <a class="actor" href="${e.rootUrl}/${e.actor.login}">\n          <img class="avatar avatar-small" src="${e.actor.avatarUrl}">\n          <span>${e.actor.login}</span>\n        </a>\n        <span class="action star"><span class="octicon octicon-star"></span></span>\n        <span class="repoTarget">\n          <a class="repo" href="${e.rootUrl}/${e.repo.name}">${e.repo.name}</a>\n        </span>\n      </div>\n    </div>`}}const ye=new marked.Renderer;function _e(e){return marked(e,{renderer:ye})}ye.heading=function(e,t,n){return"<h"+t+">"+e+"</h"+t+">\n"};var Ee=class{constructor(e){this.rootUrl=e}createView(e){return e.type in this?this[e.type](e):null}CommitCommentEvent(e){let t=e.payload;return t.mention=e.mention,t.rootUrl=this.rootUrl,t.actor=t.comment.user,t.repo=e.repo,t.sha=t.comment.commitId.substr(0,6),t.comment.createdAt=V(t.comment.createdAt),new ae({data:t})}CreateEvent(e){let t=e.payload;if("repository"===t.refType)return t.rootUrl=this.rootUrl,t.actor=e.actor,t.repo=e.repo,t.repo.rootUrl="https://github.com",t.createdAt=V(e.createdAt),t.octicon="repo",new me({data:t})}ForkEvent(e){let t=e.payload;return t.rootUrl=this.rootUrl,t.actor=e.actor,t.repo=e.repo,t.createdAt=V(e.createdAt),new ve({data:t})}GollumEvent(e){const t=e.payload;return t.rootUrl=this.rootUrl,t.actor=e.actor,t.repo=e.repo,t.createdAt=V(e.createdAt),t.pages=t.pages.map(e=>({sha:e.sha.substr(0,6),action:e.action,octicon:"created"===e.action?"book":"pencil",title:e.title,htmlUrl:e.htmlUrl})),new pe({data:t})}IssuesEvent(e){let t=e.payload.issue;return t.mention=e.mention,t.rootUrl=this.rootUrl,t.octicon="issue-"+e.payload.action,t.action=e.payload.action,t.actor=e.actor,t.repo=e.repo,t.createdAt=V(e.createdAt),new ie({data:t})}IssueCommentEvent(e){let t=e.payload;return t.mention=e.mention,t.rootUrl=this.rootUrl,t.actor=e.actor,t.repo=e.repo,t.octicon=t.issue.pullRequest?"git-pull-request":"issue-opened",t.createdAt=V(e.createdAt),t.comment.createdAt=V(t.comment.createdAt),new oe({data:t})}MemberEvent(e){let t=e.payload;return t.rootUrl=this.rootUrl,t.actor=e.actor,t.repo=e.repo,t.createdAt=V(e.createdAt),new fe({data:t})}PublicEvent(e){let t=e.payload;return t.rootUrl=this.rootUrl,t.actor=e.actor,t.repo=e.repo,t.createdAt=V(e.createdAt),new ge({data:t})}PullRequestEvent(e){let t=e.payload;return t.mention=e.mention,t.rootUrl=this.rootUrl,t.actor=e.actor,t.repo=e.repo,t.createdAt=V(e.createdAt),t.pullRequest.createdAt=V(t.pullRequest.createdAt),"opened"==t.action?t.octicon="git-pull-request":"closed"==t.action&&t.pullRequest.merged?(t.action="merged",t.octicon="git-merge"):t.octicon="circle-slash",new re({data:t})}PullRequestReviewEvent(e){let t=e.payload;return t.mention=e.mention,t.rootUrl=this.rootUrl,t.actor=e.actor,t.repo=e.repo,t.createdAt=V(e.createdAt),t.review.submittedAt=V(t.review.submitted_at),t.review.state.match(/^approved$/i)?t.octicon="check":"closed"==t.action&&t.pullRequest.merged?(t.action="merged",t.octicon="git-merge"):t.octicon="circle-slash",new le({data:t})}PullRequestReviewCommentEvent(e){let t=e.payload;return t.mention=e.mention,t.rootUrl=this.rootUrl,t.actor=e.actor,t.repo=e.repo,t.createdAt=V(e.createdAt),t.comment.createdAt=V(t.comment.createdAt),new ce({data:t})}PushEvent(e){let t=e.payload;var n;return t.rootUrl=this.rootUrl,t.branch=t.ref.replace(/^refs\/heads\//,""),t.shortSha=t,t.actor=e.actor,t.repo=e.repo,t.commits=(n=this.rootUrl+"/"+t.repo.name,t.commits.map(e=>({sha:e.sha.substr(0,6),commitUrl:n+"/commit/"+e.sha,message:e.message}))),t.createdAt=V(e.createdAt),new he({data:t})}ReleaseEvent(e){let t=e.payload.release;return t.rootUrl=this.rootUrl,t.repo=e.repo,t.createdAt=V(t.publishedAt),new be({data:t})}WatchEvent(e){let t=e.payload;return t.rootUrl=this.rootUrl,t.actor=e.actor,t.repo=e.repo,t.createdAt=V(e.createdAt),new we({data:t})}};class $e extends v{html(e){return`    <div class="pullReqEvent ghEvent">\n      <header>\n        <a class="repo" href="${e.rootUrl}/${e.headRepository.nameWithOwner}">${e.headRepository.nameWithOwner}</a>\n        <a class="eventTime" href="${e.url}"><time>${e.updatedAt}</time></a>\n      </header>\n      <div class="eventInfo">\n        <a class="actor" href="${e.rootUrl}/${e.author.login}">\n          <img class="avatar avatar-small" src="${e.author.avatarUrl}">\n          <span>${e.author.login}</span>\n        </a>\n        <span class="action requested_review">\n          <span class="word">requested you review</span>\n        </span>\n        <p class="eventTitle">\n          <span class="action ${e.action}"><span class="octicon octicon-${e.octicon}"></span></span>\n          <a class="issueTitle" href="${e.url}">#${e.number} ${e.title}</a>\n        </p>\n      </div>\n      <div class="pullReqBody quote" data-id="pullReq"></div>\n    </div>`}load(e){var t=this.findEl("pullReq");"closed"!==this.data.action?t.innerHTML=this.data.bodyHTML:t&&this.el.removeChild(t)}}class Te extends v{html(e){return`    <div class="issueEvent ghEvent">\n      <header>\n        <a class="repo" href="${e.rootUrl}/${e.headRepository.nameWithOwner}">${e.headRepository.nameWithOwner}</a>\n        <a class="eventTime" href="${e.url}"><time>${e.updatedAt}</time></a>\n      </header>\n      <div class="eventInfo">\n        <a class="actor" href="${e.rootUrl}/${e.review.author.login}">\n          <img class="avatar avatar-small" src="${e.review.author.avatarUrl}">\n          <span>${e.review.author.login}</span>\n        </a>\n        <span class="action">\n          <span class="word">${e.action}</span>\n        </span>\n        <span class="action"><span class="octicon octicon-${e.actionOcticon}"></span></span>\n      </div>\n      <div class="sub">\n        <p class="eventTitle">\n          <span class="octicon octicon-${e.octicon}"></span>\n          <a class="issueTitle" href="${e.url}">#${e.number} ${e.title}</a>\n        </p>\n        <div class="issueBody quote" data-id="issue">${e.bodyHTML}</div>\n      </div>\n      <div class="commentBody quote" data-id="comment">${e.review.bodyHTML}</div>\n    </div>`}handle(e){e.issue_click=(e,t)=>{e.classList.toggle("full")}}}var Ae=class{constructor(e){this.rootUrl=e}createView(e){if(e.rootUrl=this.rootUrl,e.updatedAt=V(e.updatedAt),e.reviewRequest&&(e.reviewRequest.submittedAt=V(e.reviewRequest.submittedAt)),"requested_review"===e.kind){const{state:t}=e;return"OPEN"==t?e.octicon="git-pull-request":"MERGED"===t?e.octicon="git-merge":"CLOSED"===t&&(e.octicon="circle-slash"),new $e({data:e})}if("reviewed"===e.kind){switch(e.review.state){case"APPROVED":e.action="approved",e.actionOcticon="check";break;case"CHANGES_REQUESTED":e.action="requested the changes",e.actionOcticon="x";break;default:e.action="commented",e.actionOcticon="comment"}return new Te({data:e})}}};class Ie extends v{html(){return'<div class="githubItem"></div>'}load(e){const{viewFactory:t,...n}=this.data,s=t.createView(n);s&&(this.add("item",s),this.data.newArrival&&this.el.classList.add("newArrival"))}}var Ue=class extends M{get itemViewClass(){return Ie}html(e){return`    <div class="timeline github">\n      <header class="timelineHeader" data-id="timelineHeader">\n        <a data-id="serviceLink" target="_blank">\n          <span class="service">GitHub</span>\n          <span class="project">${e.caption}</span>\n        </a>\n      </header>\n      <div class="timelineBody" data-id="eventList"></div>\n    </div>`}completed(){let{token:e,endpoint:t,...n}=this.data;t&&t.match(/^https?\:\/\/github\.com\/?$/)&&(t=null),this.model=new se(e,t),this.model.activate(n).then(()=>{if("event"===this.model.type){const e=new Ee(this.model.webUrl);this.data.eventList._F_itemClass=class extends l{get viewFactory(){return e}}}else if("notification"===this.model.type){const e=new Ae(this.model.webUrl);this.data.eventList._F_itemClass=class extends l{get viewFactory(){return e}}}this.findEl("serviceLink").href=this.model.url}).catch(e=>{alert("Can't fetch GitHub information")}),this.model.listened("refresh",e=>this.refreshed(e)),this.model.listened("newArrived",e=>this.newArrived(e))}};class ke extends v{html(e){return`\n    <div class="deckColumn ${e.width||"normal"}">\n      <div data-id="timeline"></div>\n    </div>`}load(e){"backlog"===this.data.service?e.timeline=new ne({data:this.data}):"github"==this.data.service&&(e.timeline=new Ue({data:this.data}))}}class Re extends _{constructor(e){super(ke,e)}html(){return'<main id="deck"></main>'}load(e){this.applyScrollStyleIfWindows(),D.listened("clear",()=>{document.querySelectorAll(".newArrival").forEach(e=>e.classList.remove("newArrival"))})}applyScrollStyleIfWindows(){const e=window.navigator.userAgent.toLowerCase();e.indexOf("windows")>-1&&-1===e.indexOf("phone")&&-1===e.indexOf("touch")&&(this.el.className="windowsScroller")}}var Se=class extends f{html(){return'    <div>\n      <nav id="naviPanel">\n        <a href="#!settings" title="Setting" target="_self"><span class="mega-octicon octicon-gear"></span></a>\n      </nav>\n      <main id="deck"></main>\n    </div>'}load(e){const t=new c;e.deck=new Re({data:t}),window.history.replaceState({},document.title,window.location.pathname);const n=this.loadTimelines();n.length?t.reset(n):y.go("intro")}loadTimelines(){try{const e=localStorage.getItem("timelines");return JSON.parse(e)||[]}catch(e){return[]}}};var Oe=class extends f{title(){return"Demo"}init(){return{deck:new c}}html(){return'    <div>\n      <nav id="naviPanel">\n        <a href="#!intro" title="Exit" target="_self"><span class="mega-octicon octicon-sign-out"></span></a>\n      </nav>\n      <div data-id="deck"></div>\n    </div>'}load(e){e.deck=new Re}completed(){this.data.deck.reset(this.loadTimelines()),this.timeoutId=setTimeout(()=>{alert("Demo exiting and return introduction page"),y.go("intro")},12e4)}unload(){this.timeoutId&&clearTimeout(this.timeoutId)}loadTimelines(){return[{service:"github",width:"wide",notify:"off",kind:"public_timeline",caption:"Public Timeline",token:null,endpoint:null}]}};y.activate(class extends v{constructor(){super({rootEl:document.body,contentEl:"contentBody"})}title(e){return e?`Deck - ${e}`:"Deck"}},{index:Se,intro:class extends f{title(){return"Introduction"}html(){return'<div id="introPage">\n  <div class="wall"></div>\n  <div class="intro">\n    <h1>\n      <img src="img/apple-touch-icon-72x72.png" style="border-radius: 8px; vertical-align: middle;">\n      <span>Deck</span>\n    </h1>\n\n    <div class="content">\n      <p>\n        &apos;Deck&apos; is a multi-timeline viewer for <a href="https://github.com/" rel="nofollow">GitHub</a> repository events.<br>\n        It is also supported for <a href="http://www.backlog.jp/" rel="nofollow">Backlog</a> produced by Nulab Inc.<br>\n        It is made of responsive design for PC or mobile modern browsers.\n      </p>\n\n      <div class="buttons clearfix">\n        <a class="button primary" href="#!/settings" target="_self">Get Started Now</a>\n        <a class="button" href="#!/demo" target="_self">See a Demo</a>\n      </div>\n\n      <p>\n        All your account data are saved in local storage of the browser.<br>\n        Your data is not saved on server-side at all.<br>\n        Setting import/export is supported so as to move yours to another browser.\n      </p>\n    </div>\n\n    <footer>\n      <p class="links">\n        <a href="#!/term" target="_self">Terms &amp; Privacy</a>\n        <a href="https://github.com/tilfin/deck">GitHub Repository</a>\n      </p>\n      <p>&apos;Deck&apos; is not a representative of GitHub. GitHub and the GitHub logos are Trademarks of GitHub, Inc.<br> All other trademarks and copyrights are property of their respective owners.</p>\n      <p>&copy; 2016 <a href="https://github.com/tilfin">tilfin</a> all rights reserved.</p>\n    </footer>\n  </div>\n</div>'}load(e){window.history.replaceState({},document.title,window.location.pathname)}},demo:Oe,term:class extends f{title(){return"Terms & Privacy"}html(){return'<div class="setting page">\n  <div id="termPage">\n    <h1>Terms &amp; Privacy</h1>\n\n    <section>\n      <h2>Terms of Service</h2>\n\n      <p>You are responsible for your use of the services, and for any consequences thereof.\n  Your access to and use of the service or any content are at your own risk.</p>\n    </section>\n      <h2>Disclaimer of Warranties</h2>\n\n      <p>We disclaim all warranties and conditions, whether express or implied, of merchantability, fitness for a particular purpose, or non-infringement.</p>\n    </section>\n\n    <section>\n      <h2>Privacy</h2>\n\n      <p>We collect access log such as your IP address, browser, operating system, the referring web page and pages visited not contain your account or your subscriptions and theirs contents information).</p>\n    </section>\n\n    <div class="buttons clearfix">\n      <a href="#!/intro" class="button back" target="_self">Back</a>\n    </div>\n\n    <footer>\n      <p>&apos;Deck&apos; is not a representative of GitHub. GitHub and the GitHub logos are Trademarks of GitHub, Inc.<br> All other trademarks and copyrights are property of their respective owners.</p>\n      <p>&copy; 2016 <a href="https://github.com/tilfin">tilfin</a> all rights reserved.</p>\n    </footer>\n  </div>\n</div>'}},settings:{index:class extends f{title(){return"Settings"}html(){return'    <div class="setting page">\n      <h1>Settings</h1>\n\n      <nav class="naviList">\n        <a href="#!settings/timeline" target="_self">Customize timelines</a>\n        <a href="#!settings/port" target="_self">Import/Export setting</a>\n        <a href="#!term" target="_self">Terms &amp; Privacy</a>\n        <a href="#!settings/credit" target="_self">Credit</a>\n      </nav>\n\n      <div class="buttons clearfix">\n        <a href="#!/" class="button" target="_self">Back</a>\n      </div>\n\n      <footer>\n        <p>&apos;Deck&apos; is not a representative of GitHub. GitHub and the GitHub logos are Trademarks of GitHub, Inc.<br> All other trademarks and copyrights are property of their respective owners.</p>\n        <p>&copy; 2016 <a href="https://github.com/tilfin">tilfin</a> all rights reserved.</p>\n      </footer>\n    </div>'}},timeline:class extends f{title(){return"Customize timelines"}init(){return{timelines:new c}}html(){return'    <div class="setting page">\n      <h1>Customize timelines</h1>\n\n      <div id="showcase"></div>\n\n      <section>\n        <h3>Add timeline</h3>\n\n        <div class="buttons clearfix">\n          <a id="addGithubColumnButton" class="button service" href="#!settings/github" target="_self">\n            <span class="mega-octicon octicon-mark-github"></span>\n            <span class="caption">GitHub</span>\n          </a>\n\n          <a id="addBacklogColumnButton" class="button service" href="#!settings/backlog" target="_self">\n            <img src="img/backlog-icon.png" width="32" height="32">\n            <span class="caption">Backlog</span>\n          </a>\n        </div>\n      </section>\n\n      <div class="buttons clearfix">\n        <button class="button back" id="cancelButton">Cancel</button>\n        <button class="button primary" id="saveButton">Save</button>\n      </div>\n    </div>'}load(e){e.showcase=new B({data:this.data.timelines}),this.data.timelines.reset(this.loadTimelines());let t=this.context.newTimeline;t&&this.data.timelines.add(t)}handle(e){e.cancelButton_click=()=>{this.needSave=!1,y.go("settings")},e.saveButton_click=()=>{this.needSave=!0,y.go("/",{timelines:this.data.timelines})}}unload(){if(this.needSave){localStorage.setItem("timelines",JSON.stringify(this.data.timelines._data)),this.data.timelines.some(e=>"off"!=e.notify)&&"Notification"in window&&Notification.requestPermission()}}loadTimelines(){try{const e=localStorage.getItem("timelines");return e?JSON.parse(e):[]}catch(e){return[]}}},backlog:P,github:x,port:class extends f{title(){return"Import/Export setting"}html(){return'<div class="setting page">\n  <h1>Import/Export</h1>\n\n  <form id="portForm">\n    <div class="field">\n      <label for="snippet">Setting JSON:</label>\n      <textarea name="snippet" class="snippet" data-id="snippet"></textarea>\n    </div>\n\n    <div class="buttons clearfix">\n      <button class="button" id="exportButton">Show current setting</button>\n      <button class="button primary" id="importButton">Apply json to setting</button>\n    </div>\n  </form>\n  <hr>\n  <div class="buttons clearfix">\n    <a href="#!settings" class="button back" target="_self">Back</a>\n  </div>\n</div>'}handle(e){e.importButton_click=()=>{try{const e=JSON.parse(this.findEl("snippet").value);if(!e.timelines||!e.defaults)return void alert("Invalid data");localStorage.setItem("defaults",JSON.stringify(e.defaults)),localStorage.setItem("timelines",JSON.stringify(e.timelines)),y.go("/")}catch(e){alert("Invalid JSON format")}return!1},e.exportButton_click=()=>{let e=localStorage.getItem("defaults"),t=localStorage.getItem("timelines");return e=JSON.parse(e),t=JSON.parse(t),this.findEl("snippet").value=JSON.stringify({defaults:e,timelines:t}),!1},e.snippet_focus=()=>{this.select()}}},credit:class extends f{title(){return"Credit"}html(){return'<div class="setting page">\n  <div id="creditPage">\n    <h1>Credits</h1>\n\n    <section>\n      <h2>marked</h2>\n\n      <blockquote>\n  Copyright (c) 2011-2014, Christopher Jeffrey (https://github.com/chjj/)\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the "Software"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n      </blockquote>\n    </section>\n\n    <section>\n      <h2>Octicons</h2>\n\n      <blockquote>\n  (c) 2012-2016 GitHub\n\n  When using the GitHub logos, be sure to follow the GitHub logo guidelines (https://github.com/logos)\n\n  Font License: SIL OFL 1.1 (http://scripts.sil.org/OFL)\n  Applies to all font files\n\n  Code License: MIT (http://choosealicense.com/licenses/mit/)\n  Applies to all other files\n      </blockquote>\n    </section>\n\n    <section>\n      <h2>Octokat.js</h2>\n\n      <blockquote>\n  Copyright (c) 2015 Philip Schatz\n\n  Permission is hereby granted, free of charge, to any person obtaining a\n  copy of this software and associated documentation files (the\n  "Software"), to deal in the Software without restriction, including\n  without limitation the rights to use, copy, modify, merge, publish,\n  distribute, sublicense, and/or sell copies of the Software, and to\n  permit persons to whom the Software is furnished to do so, subject to\n  the following conditions:\n\n  The above copyright notice and this permission notice shall be included\n  in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n      </blockquote>\n    </section>\n\n    <section>\n      <h2>Primer</h2>\n\n      <blockquote>\n  The MIT License (MIT)\n\n  Copyright (c) 2015 GitHub, Inc.\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the "Software"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in all\n  copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n      </blockquote>\n    </section>\n\n    <div class="buttons clearfix">\n      <a href="#!/settings" class="button back" target="_self">Back</a>\n    </div>\n  </div>\n</div>'}}}},{mode:"HASH"})}]);